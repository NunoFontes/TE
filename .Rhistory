axis=element_blank()
dataFrame=te.get.hist.multi(c,country,d1)
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EuroArea"
dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
for(ca in unique(dataFrame$Indicator))
dataFrame[dataFrame$Indicator==ca,]$Value=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Value))
}else if(length(country)==1){
titl=paste(country,"Indicators",sep=" - ")
axis=element_blank()
dataFrame=te.get.hist.multi.free(c,country,indicator,d1)
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
dataFrame$Indicator <- sapply(dataFrame, function(x) dataFrame$Category)[,1]
for(ca in unique(dataFrame$Indicator))
dataFrame[dataFrame$Indicator==ca,]$Value=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Value))
}else if(length(indicator)==1){
titl=paste(indicator,"Countries",sep=" - ")
axis=element_text()
dataFrame=te.get.hist.multi.free(c,country,indicator,d1)
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EuroArea"
dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
if(indicator %in% comparisonproblems){
axis=element_blank()
for(ca in unique(dataFrame$Indicator))
dataFrame[dataFrame$Indicator==ca,]$Value=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Value))
}
}
labelsbreak=paste(round(as.numeric(max(dataFrame$DateTime)-min(dataFrame$DateTime), units = "days")/300),"month")
ggplot(dataFrame,aes(x=DateTime, y=Value, colour=Indicator)) +
geom_line() +
#geom_point(size = 3) +
#scale_colour_manual(values = c("7.4" = "red","#4863A0")) +
scale_x_date(breaks = labelsbreak,labels=date_format("%m/%y")) +
scale_y_continuous(breaks = round(seq(min(dataFrame$Value), max(dataFrame$Value), by = round((max(dataFrame$Value)-min(dataFrame$Value))/10,1)),1)) +
xlab("") + ylab("") +
theme(axis.text.y = axis) +
ggtitle(titl)
#ylab(dataFrame$Category[1]) +
#ggtitle(paste( dataFrame$Country[1] ,"-", dataFrame$Category[1])) +
#theme(plot.title = element_text(face="bold"))
}
te.plot.compare.scale=function(c,country,indicator,d1=NULL,opts=NULL){
if(length(country)>70){stop("Too many indicators to show. Please re-do selection.")}
d=te.get.hist.multi.free(c,country,indicator,"last")
if(is.null(d)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(d)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
titl = paste(indicator,"Countries",sep=" - ")
d <- within(d,{Country <- reorder(Country,Value)})
#d$Country <- countrycode(d$Country,"country.name","iso3c")
qplot(Value, Country, data=d) +
facet_grid(Category ~ ., scales = "free", space = "free") +
theme(axis.text.y=element_text(color="black"),
strip.text.y = element_text(size=9),
strip.background = element_rect(fill="#FFCC99"),
panel.background = element_rect(fill="#FFFFF0"),
# panel.border=element_rect(fill=NA,colour="black"),
panel.grid.major=element_line(colour="grey"),
legend.position = "none") +
geom_point(size = 4,aes(colour = Value) ) + scale_colour_gradient(high = "red",low=muted("green")) +
xlab("") + ylab("") +
ggtitle(titl)
}
te.plot.compare=function(c,country,indicator,d1="NULL",opts=NULL){
df=data.frame()
assign("df",historicalToMatrix(c,country,indicator), envir = environment())
if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
df$Country[!is.na(countrycode(df$Country,"country.name","iso3c"))] <- countrycode(df$Country,"country.name","iso3c")[!is.na(countrycode(df$Country,"country.name","iso3c"))]
df$Country[tolower(df$Country)=="euro area"] <- "EUR"
titl=paste(indicator[1], indicator[2],sep=" ~ ")
ggplot(df, aes(get(names(df)[1]), get(names(df)[2])),environment=environment()) +
geom_point() +
# geom_point(aes(colour = get(names(df)[3]))) +
# scale_colour_gradient(high = "red") +
geom_text(fontface=3, label=df$Country, hjust=0, vjust=0) +
xlab(indicator[1]) + ylab(indicator[2]) +
geom_smooth(method = "lm", formula = y ~ poly(x, 2),se=F) +
ggtitle(titl)
}
## ACCEPTS: G99 | Continent | EMERGING99 | PLUNGING99 ##
te.countries = function(c,group="G20"){
m = te.get.mat(c)
if(substr(tolower(group),1,1)=="g" && !is.na(as.numeric(substr(tolower(group),2,nchar(group)))))
{
return (trim(head(m[order(m$GDP, decreasing = TRUE),],n=as.numeric(substr(tolower(group),2,nchar(group))))$Country))
}
if(substr(tolower(group),1,6)=="europe")
{
n=10
if(!is.na(as.numeric(substr(group,7,nchar(group)))))
{
n=as.numeric(substr(group,7,nchar(group)))
}
return (trim(head((m[trim(m$Continent)=="Europe",])[order(m[trim(m$Continent)=="Europe",]$GDP, decreasing = TRUE),]$Country,n)))
}
if(substr(tolower(group),1,6)=="africa")
{
n=10
if(!is.na(as.numeric(substr(group,7,nchar(group)))))
{
n=as.numeric(substr(group,7,nchar(group)))
}
return (trim(head((m[trim(m$Continent)=="Africa",])[order(m[trim(m$Continent)=="Africa",]$GDP, decreasing = TRUE),]$Country,n)))
}
if(substr(tolower(group),1,4)=="asia")
{
n=10
if(!is.na(as.numeric(substr(group,5,nchar(group)))))
{
n=as.numeric(substr(group,5,nchar(group)))
}
return (trim(head((m[trim(m$Continent)=="Asia",])[order(m[trim(m$Continent)=="Asia",]$GDP, decreasing = TRUE),]$Country,n)))
}
if(substr(tolower(group),1,7)=="america")
{
n=10
if(!is.na(as.numeric(substr(group,8,nchar(group)))))
{
n=as.numeric(substr(group,8,nchar(group)))
}
return (trim(head((m[trim(m$Continent)=="America",])[order(m[trim(m$Continent)=="America",]$GDP, decreasing = TRUE),]$Country,n)))
}
if(substr(tolower(group),1,9)=="australia")
{
n=10
if(!is.na(as.numeric(substr(group,10,nchar(group)))))
{
n=as.numeric(substr(group,10,nchar(group)))
}
return (trim(head((m[trim(m$Continent)=="Australia",])[order(m[trim(m$Continent)=="Australia",]$GDP, decreasing = TRUE),]$Country,n)))
}
if(substr(tolower(group),1,8)=="emerging")
{
n=10
if(!is.na(as.numeric(substr(group,9,nchar(group)))))
{
n=as.numeric(substr(group,9,nchar(group)))
}
return (trim(head(m[order(m$GDP.Growth.YoY, decreasing = TRUE),],n)$Country))
}
if(substr(tolower(group),1,8)=="plunging")
{
n=10
if(!is.na(as.numeric(substr(group,9,nchar(group)))))
{
n=as.numeric(substr(group,9,nchar(group)))
}
return (trim(head(m[order(m$GDP.Growth.YoY, decreasing = FALSE),],n)$Country))  }
}
te.indicators = function(c,group="labour"){
#m = te.get.mat(c)
c("GDP Annual Growth Rate",
"Inflation Rate",
"Interest Rate",
"Imports",
"GDP",
"GDP Growth Rate",
"Non Farm Payrolls",
"Unemployment Rate",
"Business Confidence",
"Consumer Confidence",
"Industrial Production",
"Retail Sales YoY",
"Exports")
}
historicalToMatrix = function(c,countries,indicators){
options(stringsAsFactors = FALSE)
newdf=data.frame()
df=data.frame()
myTempDF=data.frame()
df=te.get.hist.multi.free(c,countries,indicators,"last")
for(i in 1:length(countries))
{
#print(i)
myTempDF=cbind(data.frame(t(df[tolower(df$Country)==tolower(countries[i]),c('Category','Value')])),countries[i])
if(length(myTempDF)<length(indicators)+1){next}
names(myTempDF)=c(myTempDF['Category',1:length(indicators)],'Country')
newdf=rbind(newdf,myTempDF['Value',])
}
#return(list(message=paste(names(newdf),collapse=" # ")))
newdf[,1:length(indicators)]<-lapply(newdf[,1:length(indicators)],as.numeric)
#return(list(message=paste(paste(df,collapse=" J "),paste(newdf,collapse=" H "),collapse=" ! ")))
newdf
}
historical.matrix = function(c,countries,indicators,d1="2005"){
options(stringsAsFactors = FALSE)
newdf=data.frame()
df=data.frame()
myTempDF=data.frame()
df=te.get.hist.multi.free(c,countries,indicators,d1)
for(i in 1:length(countries))
{
#print(i)
myTempDF=cbind(data.frame(t(df[tolower(df$Country)==tolower(countries[i]),c('Category','Value')])),countries[i])
if(length(myTempDF)<length(indicators)+1){next}
names(myTempDF)=c(myTempDF['Category',1:length(indicators)],'Country')
newdf=rbind(newdf,myTempDF['Value',])
}
#return(list(message=paste(names(newdf),collapse=" # ")))
newdf[,1:length(indicators)]<-lapply(newdf[,1:length(indicators)],as.numeric)
#return(list(message=paste(paste(df,collapse=" J "),paste(newdf,collapse=" H "),collapse=" ! ")))
newdf
}
trim=function (x) gsub("^\\s+|\\s+$", "", x)
Split=function(x) {sapply(strsplit(x," "), paste, collapse=".")}
te.geomap=function(c,country="NULL",indicator,d1="",opts=NULL){
if(is.null(opts)){opts="World"}
if(opts=="World"){
ct=te.countries(c,"G200")
}else if(opts=="Africa"){
ct=te.countries(c,"Africa200")
}else if(opts=="Europe"){
ct=te.countries(c,"Europe200")
}else if(opts=="Asia"){
ct=te.countries(c,"Asia200")
}else{
ct=te.countries(c,"G200")
}
d=te.get.hist.multi.free.na(c,ct,indicator,"last")
d$region[!is.na(countrycode(d$Country,"country.name","iso3c"))] <- countrycode(d$Country,"country.name","iso3c")[!is.na(countrycode(d$Country,"country.name","iso3c"))]
d[is.na(countrycode(d$Country,"country.name","iso3c")),]$region <- substr(d[is.na(countrycode(d$Country,"country.name","iso3c")),]$Country,1,3)
d$region[d$Country=="Congo"] <- "COD"
d$Value <- as.numeric(d$Value)
#cnames <-aggregate(cbind(long, lat) ~ region, data = all, FUN = function(x) mean(range(x)))
#cnames$angle <-0
#head(cnames)
sPDF <- joinCountryData2Map(d,joinCode = "ISO3",nameJoinColumn="region")[-which(getMap()$ADMIN=="Antarctica"),]
par(mai=c(0,0,0,0),mar=c(0,0,1,0),oma=c(0,0,0,0),xaxs="i",yaxs="i")
colourPalette <- brewer.pal(20,"YlOrRd")
mapCountryData(sPDF,
nameColumnToPlot="Value",
addLegend=FALSE,
colourPalette=colourPalette,
oceanCol="lightblue",
borderCol="black",
missingCountryCol="grey",
mapTitle=paste(opts,indicator,sep=" - "),
mapRegion=opts,
numCats=30)
#ggplot(d, aes(map_id = region)) +
#  geom_map(aes(fill = Value),colour="grey10", map = all) +
#  expand_limits(x = all$long, y = all$lat) +
#  scale_fill_gradient2(low="red", high=muted("green"),mid = "#669900", midpoint = (max(d$Value,na.rm=T)-min(d$Value,na.rm=T))/2) +
#  theme(legend.position = "bottom",
#        axis.ticks = element_blank(),
#        axis.title = element_blank(),
#        axis.text =  element_blank(),
#        panel.background = element_rect(fill='#D6E0FF')) +
#geom_text(cnames, aes(long, lat, label = region, angle=angle, map_id=NULL), size=2.5) +
#  guides(fill = guide_colorbar(barwidth = 10, barheight = 0.5))
}
te.heat.map=function(c,country,indicator,d1="NULL",opts=NULL){
library(scales)
library(plyr)
df=te.get.hist.multi.free(c,country,indicator,"last")
if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
df <- ddply(df, .(Category), transform, rescale = rescale(Value))
ggplot(df, aes(Category, Country)) +
geom_tile(aes(fill = rescale),colour = "white") +
scale_fill_gradient2(low = "steelblue",high = "red",midpoint=.5) +
theme_grey(base_size = 9) +
labs(x = "",y = "") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(legend.position = "none",axis.ticks = element_blank(),
axis.text.x = element_text(size = 15, angle = 310, hjust = 0, colour = "black"),
axis.text.y = element_text(size = 12, colour = "#000052"))+
ggtitle("Countries ~ Indicators")
}
te.tree.map=function(c,country,indicator,d1="NULL",opts=NULL){
options(stringsAsFactors = FALSE)
df=te.get.hist.multi.free(c,country,indicator,"last")
if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
df$Country[!is.na(countrycode(df$Country,"country.name","iso3c"))] <- countrycode(df$Country,"country.name","iso3c")[!is.na(countrycode(df$Country,"country.name","iso3c"))]
df$Country[tolower(df$Country)=="euro area"] <- "EuroArea"
df$Country[df$Value<0] <- paste("(-)",df$Country[df$Value<0],sep="")
df$Value <- abs(df$Value)
treemap::treemap(df,
index=c("Country"),
vSize="Value",
title=indicator,
type="value",
vColor="Value",
palette="RdBu",
aspRatio=1,
range=c(min(df$Value),max(df$Value)))
}
#te.tree.map(c,countries,"GDP")
te.pie.chart=function(c,country,indicator,d1="NULL",opts=NULL){
options(stringsAsFactors = FALSE)
df=te.get.hist.multi.free(c,country,indicator,"last")
if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
df$Country[!is.na(countrycode(df$Country,"country.name","iso3c"))] <- countrycode(df$Country,"country.name","iso3c")[!is.na(countrycode(df$Country,"country.name","iso3c"))]
df$Country[tolower(df$Country)=="euro area"] <- "EuroArea"
df$Country[df$Value<0] <- paste("(-)",df$Country[df$Value<0],sep="")
df$Value <- abs(df$Value)
df$Value <- df$Value/sum(df$Value)
df$p <- cumsum(df$Value)-diff(c(0,cumsum(df$Value)))*(1-0.5)
ggplot(data=df, aes(x=factor(1),y=Value, fill=factor(Country), weight=Value))+
geom_bar(width=1,stat="identity",colour="black") +
coord_polar(theta="y")  +
geom_text(aes(x=1.5,y=p, angle=-p*360,label=Country,vjust=0)) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.title.y= element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.ticks=element_blank(),
legend.position = "none") +
ggtitle(indicator)
}
te.table=function(c,countries,indicators,d1="2005",what="NULL"){
if(what=="te.plot.compare.scale"|| what=="te.plot.compare" || what=="te.geomap" || what=="te.tree.map" || what=="te.heat.map"){d1="last"}
if(what=="te.geomap"){countries=te.countries(c,"G200")}
if(what=="te.correlation.matrix"){d1="1950"}
df=te.get.hist.multi.free(c,countries,indicators,d1)
if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
#df$DateTime <- as.character(as.yearmon(df$DateTime))
#df$DateTime <- as.character(as.yearmon(df$DateTime))
#df
as.list(df)
}
#te.table(c,"argentina","youth unemployment rate")
te.correlation.matrix=function(c,country,indicator,d1="NULL",opts=NULL){
options(stringsAsFactors = FALSE)
df=te.get.hist.multi.free(c,country,indicator,d1="1950")
#df=te.get.hist.multi.free(c,country,indicator,d1="2012")
if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
df$Country[!is.na(countrycode(df$Country,"country.name","iso3c"))] <- countrycode(df$Country,"country.name","iso3c")[!is.na(countrycode(df$Country,"country.name","iso3c"))]
df$Country[tolower(df$Country)=="euro area"] <- "EuroArea"
if(length(country)==1){
titl=paste(country,"Indicators",sep=" - ")
df$Indicator <- sapply(df, function(x) paste(df$Category,sep=""))[,1]
}else if(length(indicator)==1){
titl=paste(indicator,"Countries",sep=" - ")
df$Indicator <- sapply(df, function(x) paste(substr(df$Country,1,4),sep=""))[,1]
}else{
titl="TODO"
df$Indicator <- sapply(df, function(x) paste(substr(df$Country,1,4),df$Category,sep=" - "))[,1]
}
df$DateTime <- as.yearmon(df$DateTime)
#df$DateTime <- as.yearqtr(df$DateTime)
ndf = cast(df,DateTime ~ Indicator,value = "Value",fun.aggregate="mean")
names=names(ndf)
#ndf=as.data.frame(na.omit(na.trim(na.approx(ndf[,2:length(names(ndf))]))))
#names(ndf)=names[2:length(names)]
#if(length(na.omit(na.trim(ndf))[,1])<3){stop("Too Little Info. One or more Indicators are sparse in data, re-do selection.")}
#plot(na.approx(ndf[,2]))
mdata=cor(na.approx(ndf[,2:length(names)],na.rm=F),use = "pairwise.complete.obs")
#mdata=cor(as.data.frame(ndf[,1:length(names(ndf))]))
plotcorrInternal <- function() {
if (i == j && !diag)
return()
if (!numbers) {
mat[1, 2] <- mdata[i, j]
mat[2, 1] <- mat[1, 2]
ell <- ellipse(mat, t = 0.43)
ell[, 1] <- ell[, 1] + j
ell[, 2] <- ell[, 2] + length(rows) + 1 - i
polygon(ell, col = col[i, j])
if (outline)
lines(ell)
}
else {
text(j + 0.3, length(rows) + 1 - i ,
round(100 * mdata[i, j], 0), adj=c(.5,.5),cex = .9,col=colorsnum[5*mdata[i,j] + 6])
}
}
colors = c("#08519C","#3182BD","#6BAED6","#BDD7E7","#EFF3FF","white","#FEE5D9","#FCAE91","#FB6A4A","#DE2D26","#A50F15")
colorsnum = c("#08519C","#3182BD","#6BAED6","#BDD7E7","#CCD2E5","#E4E2B7","#D4BEB4","#FCAE91","#FB6A4A","#DE2D26","#A50F15")
savepar <- par(pty = "m", mar=c(0,0,1,0),oma=c(0,0,1,0))
on.exit(par(savepar))
plot.new()
par(new = TRUE)
rowdim <- dim(mdata)[1]
coldim <- dim(mdata)[2]
rowlabs <- dimnames(mdata)[[1]]
collabs <- dimnames(mdata)[[2]]
if (is.null(rowlabs))
rowlabs <- 1:rowdim
if (is.null(collabs))
collabs <- 1:coldim
rowlabs <- as.character(rowlabs)
collabs <- as.character(collabs)
col=colors[5*mdata + 6]
col <- rep(col, length = length(mdata))
dim(col) <- dim(mdata)
cols <- 1:coldim
rows <- 1:rowdim
maxdim <- max(length(rows), length(cols))
plt <- par("plt")
xlabwidth <- max(strwidth(rowlabs[rows], units = "figure",cex = .1))/(plt[2] - plt[1])
xlabwidth <- xlabwidth * maxdim/(1 - xlabwidth)
ylabwidth <- max(strwidth(collabs[cols], units = "figure",cex = .1))/(plt[4] - plt[3])
ylabwidth <- ylabwidth * maxdim/(1 - ylabwidth)
plot(c(-xlabwidth - 0.5, maxdim + 0.5), c(0, maxdim + 1.5 +
ylabwidth), type = "n", bty = "n", axes = F, xlab = "",
ylab = "", asp = 1, cex.lab = .5)
title(titl,cex.main = 1)
text(rep(0, length(rows)), length(rows):1, labels = rowlabs[rows],
adj = 1, cex = .8)
text(cols, rep(length(rows) + 1, length(cols)),
labels = collabs[cols], srt = 25, adj = 0, cex = .7)
mat <- diag(c(1, 1))
diag=F
numbers=F
outline=T
for (i in 1:dim(mdata)[1]) {
for (j in 1:dim(mdata)[2]) {
if ((i >= j)) {
numbers=F
plotcorrInternal()
}
else if ((i <= j)) {
numbers=T
plotcorrInternal()
}
}
}
}
#dataFrame=te.get.hist.multi.free(c,country,indicator,date)
#te.plot.multi(c,c("United States:Unemployment Rate","United States:Inflation Rate"),date="2005")
#te.plot.compare(c("r@tradingeconomics.com","Lisboa!1"),countries,indicators)
#c=set.auth("r@tradingeconomics.com","Lisboa!1")
#te.plot.compare(c,EUROPE[20:length(EUROPE)],indicators)
#te.plot.compare.scale(c,EUROPE[1:20],"unemployment rate")
#dataFrame=te.get.hist.multi.free(c,EUROPE,"unemployment rate",d1="last")
#te.plot.multi(c,reqArray)
#te.plot(c,"united states","unemployment rate")
#te.countries(c,"G20")
#te.geomap(c,"inflation rate")
#EUROPE=
#AFRICA=
#G20=
#AMERICAS=
#ASIA=
indicators=c("gdp annual growth rate","inflation rate")
countries=c("portugal","greece","spain","united states","united kingdom","japan")
#panel.cor=function(x, y, digits=2, prefix="", cex.cor){
#  usr <- par("usr"); on.exit(par(usr))
#  par(usr = c(0, 1, 0, 1))
#  r <- cor(x, y,use="pairwise.complete.obs")
#  test <- cor.test(x,y,use="pairwise.complete.obs")
#  # borrowed from printCoefmat
#  Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
#                   cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
#                   symbols = c("****", "***", "**", "*", " "))
#  text(0.5, 0.5, round(100*r),cex=3)
#  text(.8, .85, Signif,col=2)
#}
#OLDte.correlation.matrix=function(c,country,indicator,d1="NULL",opts=NULL){
#  options(stringsAsFactors = FALSE)
#  df=te.get.hist.multi.free(c,country,indicator,d1="1950")
#  #df=te.get.hist.multi.free(c,country,indicator,d1="2012")
#  if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
#  if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
#
#  df$Country[!is.na(countrycode(df$Country,"country.name","iso3c"))] <- countrycode(df$Country,"country.name","iso3c")[!is.na(countrycode(df$Country,"country.name","iso3c"))]
#  df$Country[tolower(df$Country)=="euro area"] <- "EuroArea"
#  if(length(country)==1){
#  df$Indicator <- sapply(df, function(x) paste(df$Category,sep=""))[,1]
#}else if(length(indicator)==1){
#  df$Indicator <- sapply(df, function(x) paste(substr(df$Country,1,4),sep=""))[,1]
#}else{
#  df$Indicator <- sapply(df, function(x) paste(substr(df$Country,1,4),df$Category,sep=" - "))[,1]
#}
#  #df$DateTime <- as.yearmon(df$DateTime)
#  df$DateTime <- as.yearqtr(df$DateTime)
#  ndf = cast(df,DateTime ~ Indicator,value = "Value",fun.aggregate="mean")
#  names=names(ndf)
#  if(length(na.omit(na.trim(ndf))[,1])<3){stop("Too Little Info. One or more Indicators are sparse in data, re-do selection.")}
#  ndf=as.data.frame(na.omit(na.approx(na.trim(ndf[,2:length(names(ndf))]))))
#  names(ndf)=names[2:length(names)]
#  pairs(as.data.frame(ndf[,1:length(names(ndf))]),
#        lower.panel=panel.smooth, upper.panel=panel.cor,gap=0.1,
#        cex=.1,cex.labels=1.2,main="CORRELATION MATRIX")
#}
if(F){
#BUBBLE PLOT
df=data.frame()
assign("df",historicalToMatrix(c,country,indicator), envir = environment())
if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
df$Country[!is.na(countrycode(df$Country,"country.name","iso3c"))] <- countrycode(df$Country,"country.name","iso3c")[!is.na(countrycode(df$Country,"country.name","iso3c"))]
df$Country[tolower(df$Country)=="euro area"] <- "EUR"
titl=paste(indicator[2], indicator[3],sep=" ~ ")
ggplot(df, aes(x=get(names(df)[2]), y=get(names(df)[3]), size=get(names(df)[1]), label=Country),legend=FALSE)+
geom_point(colour="white", fill="red", shape=21) + scale_size_area(max_size = 25)+
scale_x_continuous(indicator[2],limits=c(min(df[,2]), max(df[,2])))+
scale_y_continuous(indicator[3],limits=c(min(df[,3]), max(df[,3])))+
geom_text(size=4, hjust=0, vjust=0)+
ggtitle(titl)
}
?TE
library(TE)
te.plot
te.plot
q()
