}else{
for(i in 1:min(howmany,length(indicator))){
plotsList[[i]]=theFunction(1,country[i],indicator,d1,opts)
}
}
if(length(plotsList)==1){
arrange_ggplot2(plotsList[[1]],ncol=1)
}
if(length(plotsList)==2){
arrange_ggplot2(plotsList[[1]],plotsList[[2]],ncol=1)
}
if(length(plotsList)>2){
arrange_ggplot2(plotsList[[1]],plotsList[[2]],plotsList[[3]],ncol=1)
}
}
te.tableOfCharts("te.plot.multi",3,c("Portugal","Spain"),c("Unemployment Rate","Inflation Rate","GDP Growth Rate"),d1="2003")
te.tableOfCharts("te.plot.multi",3,c("United States", "Germany", "France"),c("GDP", "GDP Annual Growth Rate"),d1="2003")
c="te.plot.multi"
theFunction=get(c)
plotsList = list()
howmany = 3
length(indicator)>1
i=1
plotsList[[i]]=theFunction(1,country,indicator[i],d1,opts)
i=2
plotsList[[i]]=theFunction(1,country,indicator[i],d1,opts)
te.pie.chart=function(c,country,indicator,d1="NULL",opts=NULL){
options(stringsAsFactors = FALSE)
if(!is.null(opts$title) && opts$title){theTitle=element_text(face="bold")}else{theTitle=element_blank()}
#df=te.get.hist.multi.free(c,country,indicator,"last")
if(length(unique(country))>1 && length(indicator)>1){
df=te.get.mat.new(country,indicator[1])}else{df=te.get.mat.new(country,indicator)}
df <- df[c("Country","Category","DateTime","Value","Unit")]
if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(unique(df$Category))==1) df = te.unit.converter(df)
for(rows in 1:dim(df)[1])
df$Category[rows] <- paste(substr(strsplit(df$Category[rows]," ")[[1]],1,5),collapse=" ")
df$Country[!is.na(countrycode(df$Country,"country.name","iso3c"))] <- countrycode(df$Country,"country.name","iso3c")[!is.na(countrycode(df$Country,"country.name","iso3c"))]
df$Country[tolower(df$Country)=="euro area"] <- "EA17"
df$Country[df$Value<0] <- paste("(-)",df$Country[df$Value<0],sep="")
df$Value <- abs(df$Value)
df$Value <- df$Value/sum(df$Value)
df$p <- cumsum(df$Value)-diff(c(0,cumsum(df$Value)))*(1-0.5)
df$Indicator <- df$Country
if(length(unique(df$Country))==1) df$Indicator <- df$Category
ggplot(data=df, aes(x=factor(1),y=Value, fill=factor(Indicator), weight=Value))+
geom_bar(width=1,stat="identity",colour="black") +
coord_polar(theta="y")  +
geom_text(aes(x=1.5,y=p, angle=-p*360,label=Indicator,vjust=0)) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.title.y= element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.ticks=element_blank(),
legend.position = "none") +
ggtitle(indicator)
}
country
indicator
d1
te.get.hist.multi.free.new(country,indicator,d1)
te.stats.analysis = function(c,country,indicator,d1="NULL",opts=NULL){
historical=te.get.hist.multi.free.new(country,indicator,d1)
head(historical)
}
te.stats.analysis(1,country,indicator,d1,opts=NULL)
historical
historical=te.get.hist.multi.free.new(country,indicator,d1)
historical
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
#head(dataFrame)
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame$Close)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(country)==1){
for(rows in 1:dim(dataFrame)[1])
dataFrame$Category[rows] <- paste(substr(strsplit(dataFrame$Category[rows]," ")[[1]],1,5),collapse=" ")
dataFrame$Indicator <- sapply(dataFrame, function(x) dataFrame$Category)[,1]
}else if(length(indicator)==1){
dataFrame$Indicator <- dataFrame$Country
}else{
for(rows in 1:dim(dataFrame)[1])
dataFrame$Category[rows] <- paste(substr(strsplit(dataFrame$Category[rows]," ")[[1]],1,5),collapse=" ")
dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EA17"
dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
}
for(ca in unique(dataFrame$Indicator))
dataFrame[dataFrame$Indicator==ca,]$Close=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Close))
dataFrame
aggregate(dataFrame)
aggregate(state.x77, list(Region = state.region), mean)
historicalToMatrix.new(1,country,indicator)
state.x77
aggregate(dataFrame,Category,mean)
dataFrame
aggregate(Indicator,Category,mean)
aggregate(Indicator,list(Category),mean)
aggregate(Indicator,DataFrame,mean)
aggregate(DataFrame,Indicator,mean)
aggregate(dataFrame,Indicator,mean)
aggregate(dataFrame,"Indicator",mean)
aggregate(dataFrame,dataFrame$Indicator,mean)
aggregate(dataFrame,list(d=dataFrame$Indicator),mean)
aggregate(dataFrame$Close,list(d=dataFrame$Indicator),mean)
aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"mean")
dataFrame
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
#head(dataFrame)
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame$Close)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(country)==1){
for(rows in 1:dim(dataFrame)[1])
dataFrame$Category[rows] <- paste(substr(strsplit(dataFrame$Category[rows]," ")[[1]],1,5),collapse=" ")
dataFrame$Indicator <- sapply(dataFrame, function(x) dataFrame$Category)[,1]
}else if(length(indicator)==1){
dataFrame$Indicator <- dataFrame$Country
}else{
for(rows in 1:dim(dataFrame)[1])
dataFrame$Category[rows] <- paste(substr(strsplit(dataFrame$Category[rows]," ")[[1]],1,5),collapse=" ")
dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EA17"
dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
}
for(ca in unique(dataFrame$Indicator))
dataFrame[dataFrame$Indicator==ca,]$Close=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Close))
dataFrame
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
#head(dataFrame)
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame$Close)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(country)==1){
for(rows in 1:dim(dataFrame)[1])
dataFrame$Category[rows] <- paste(substr(strsplit(dataFrame$Category[rows]," ")[[1]],1,5),collapse=" ")
dataFrame$Indicator <- sapply(dataFrame, function(x) dataFrame$Category)[,1]
}else if(length(indicator)==1){
dataFrame$Indicator <- dataFrame$Country
}else{
for(rows in 1:dim(dataFrame)[1])
dataFrame$Category[rows] <- paste(substr(strsplit(dataFrame$Category[rows]," ")[[1]],1,5),collapse=" ")
dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EA17"
dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
}
aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"mean")
aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"max")
aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"sd")
aggregate(dataFrame$Close,list(d=dataFrame$Indicator),c("mean","sd"))
aggregate(dataFrame$Close,list(d=dataFrame$Indicator),FUN=function(x) c(mn =mean(x), n=length(x) ) )
aggregate(dataFrame$Close,list(d=dataFrame$Indicator),FUN=function(x) c(avg=mean(x), min=min(x), max=min(x), sd=min(x) ) )
aggregate(dataFrame$Close,list(d=dataFrame$Indicator),FUN=function(x) c(avg=mean(x), min=min(x), max=max(x), sd=sd(x) ) )
stats = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),FUN=function(x) c(avg=mean(x), min=min(x), max=max(x), sd=sd(x) ) )
stats
histMat = historicalToMatrix.new(1,country,indicator)
histMat
dataFrame[Indicator == stats$d[1]]
dataFrame[dataFrame$Indicator == stats$d[1]]
stats$d[1]
dataFrame$Indicator == stats$d[1]
dataFrame[dataFrame$Indicator == stats$d[1],]
dataFrame[order(dataFrame$DateTime, decreasing = TRUE),]
dataFrame[order(dataFrame$DateTime, decreasing = F),]
dataFrame[order(dataFrame$DateTime, decreasing = T),]
dataFrame[dataFrame$Indicator == stats$d[1],]
(dataFrame[dataFrame$Indicator == stats$d[1],])
temp = (dataFrame[dataFrame$Indicator == stats$d[1],])
temp
temp[order(temp$DateTime, decreasing = T),]
temp[order(temp$DateTime, decreasing = T),1]
temp[order(temp$DateTime, decreasing = T),][1]
temp[order(temp$DateTime, decreasing = T),]
head(temp[order(temp$DateTime, decreasing = T),],1)
head(temp[order(temp$DateTime, decreasing = T),],1)$Close
stats
dom(stats)
dim(stats)
dim(stats)[1]
rep(0,dim(stats)[1])
cbind(stats,rep(0,dim(stats)[1]))
dim(stats)
stats
length(stats)
stats
colnames(stats)
data.frame(stats)
dim(data.frame(stats))
View(stats)
stats = cbind(stats,rep(0,dim(stats)[1]))
stats
te.stats.analysis = function(c,country,indicator,d1="NULL",opts=NULL){
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
#head(dataFrame)
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame$Close)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(country)==1){
for(rows in 1:dim(dataFrame)[1])
dataFrame$Category[rows] <- paste(substr(strsplit(dataFrame$Category[rows]," ")[[1]],1,5),collapse=" ")
dataFrame$Indicator <- sapply(dataFrame, function(x) dataFrame$Category)[,1]
}else if(length(indicator)==1){
dataFrame$Indicator <- dataFrame$Country
}else{
for(rows in 1:dim(dataFrame)[1])
dataFrame$Category[rows] <- paste(substr(strsplit(dataFrame$Category[rows]," ")[[1]],1,5),collapse=" ")
dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EA17"
dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
}
stats = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),FUN=function(x) c(avg=mean(x), min=min(x), max=max(x), sd=sd(x) ) )
temp = (dataFrame[dataFrame$Indicator == stats$d[1],])
head(temp[order(temp$DateTime, decreasing = T),],1)$Close
stats = cbind(stats,rep(0,dim(stats)[1]))
#histMat = historicalToMatrix.new(1,country,indicator)
}
te.stats.analysis(1,country,indicator,d1,opts=NULL)
te.stats.analysis = function(c,country,indicator,d1="NULL",opts=NULL){
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
#head(dataFrame)
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame$Close)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(country)==1){
for(rows in 1:dim(dataFrame)[1])
dataFrame$Category[rows] <- paste(substr(strsplit(dataFrame$Category[rows]," ")[[1]],1,5),collapse=" ")
dataFrame$Indicator <- sapply(dataFrame, function(x) dataFrame$Category)[,1]
}else if(length(indicator)==1){
dataFrame$Indicator <- dataFrame$Country
}else{
for(rows in 1:dim(dataFrame)[1])
dataFrame$Category[rows] <- paste(substr(strsplit(dataFrame$Category[rows]," ")[[1]],1,5),collapse=" ")
dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EA17"
dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
}
stats = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),FUN=function(x) c(avg=mean(x), min=min(x), max=max(x), sd=sd(x) ) )
temp = (dataFrame[dataFrame$Indicator == stats$d[1],])
head(temp[order(temp$DateTime, decreasing = T),],1)$Close
stats = cbind(stats,rep(0,dim(stats)[1]))
stats
#histMat = historicalToMatrix.new(1,country,indicator)
}
te.stats.analysis(1,country,indicator,d1,opts=NULL)
te.stats.analysis = function(c,country,indicator,d1="NULL",opts=NULL){
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
#head(dataFrame)
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame$Close)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EA17"
dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
stats = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),FUN=function(x) c(avg=mean(x), min=min(x), max=max(x), sd=sd(x) ) )
temp = (dataFrame[dataFrame$Indicator == stats$d[1],])
head(temp[order(temp$DateTime, decreasing = T),],1)$Close
stats = cbind(stats,rep(0,dim(stats)[1]))
stats
#histMat = historicalToMatrix.new(1,country,indicator)
}
te.stats.analysis(1,country,indicator,d1,opts=NULL)
theMean = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"mean" )
theMax = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"max" )
theMin = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"min" )
theSd = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"sd" )
theMean
theMax
theMin
theSd
cbind(theMean,theMax$x,theMin$x,theSd$x)
unique(dataFrame$Indicator)
theLatest = c()
for(i in 1:unique(dataFrame$Indicator)){
temp = (dataFrame[dataFrame$Indicator == stats$d[1],])
theLatest = cbind(theLatest,head(temp[order(temp$DateTime, decreasing = T),],1)$Close)
}
theLatest
1:unique(dataFrame$Indicator)
theLatest = c()
for(i in 1:length(unique(dataFrame$Indicator))){
temp = (dataFrame[dataFrame$Indicator == stats$d[i],])
theLatest = cbind(theLatest,head(temp[order(temp$DateTime, decreasing = T),],1)$Close)
}
theLatest
cbind(theMean,theMax$x,theMin$x,theSd$x,t(theLatest))
head(temp[order(temp$DateTime, decreasing = T),],10)$Close
lm(head(temp[order(temp$DateTime, decreasing = T),],10)$Close)
?lm
lm(head(temp[order(temp$DateTime, decreasing = T),],5)$Close)
lm(1:lenght(head(temp[order(temp$DateTime, decreasing = T),],5)$Close)~head(temp[order(temp$DateTime, decreasing = T),],5)$Close)
lm(1:length(head(temp[order(temp$DateTime, decreasing = T),],5)$Close)~head(temp[order(temp$DateTime, decreasing = T),],5)$Close)
temp[order(temp$DateTime, decreasing = T),],5)$Close
head(temp[order(temp$DateTime, decreasing = T),],5)$Close
theLatestFew = lm(1:length(head(temp[order(temp$DateTime, decreasing = F),],5)$Close)~head(temp[order(temp$DateTime, decreasing = T),],5)$Close)
theLatestFew
theLatestFew = lm(1:length(head(temp[order(temp$DateTime, decreasing = F),],5)$Close)~head(temp[order(temp$DateTime, decreasing = F),],5)$Close)
theLatestFew
head(temp[order(temp$DateTime, decreasing = F),],5)$Close
temp[order(temp$DateTime, decreasing = T),],5)$Close
temp[order(temp$DateTime, decreasing = T),]
head(temp[order(temp$DateTime, decreasing = T),],5)$Close
theLatestFew = lm(length(head(temp[order(temp$DateTime, decreasing = T),],5)$Close):1~head(temp[order(temp$DateTime, decreasing = T),],5)$Close)
theLatestFew
names(theLatestFew)
theLatestFew$coefficients
theLatestFew$coefficients[2]
theLatestFew$coefficients[[2]]
country = c("Germany", "France", "Spain", "Portugal")
indicator= c("Inflation Rate", "Unemployment Rate", "Youth Unemployment Rate", "Inflation Rate Mom", "Core Inflation Rate")
te.stats.analysis(1,country,indicator)
te.stats.analysis(1,country,indicator)
te.stats.analysis = function(c,country,indicator,d1="NULL",opts=NULL){
options(stringsAsFactors = FALSE)
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
#head(dataFrame)
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame$Close)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EA17"
dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
theMean = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"mean" )
theMax = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"max" )
theMin = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"min" )
theSd = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"sd" )
theLatest = c()
trend = c()
inStudy = unique(dataFrame$Indicator)
for(i in 1:length(inStudy)){
temp = (dataFrame[dataFrame$Indicator == inStudy[i],])
theLatest = cbind(theLatest,head(temp[order(temp$DateTime, decreasing = T),],1)$Close)
theLatestFew = lm(length(head(temp[order(temp$DateTime, decreasing = T),],5)$Close):1~head(temp[order(temp$DateTime, decreasing = T),],5)$Close)
trend = cbind(trend,theLatestFew$coefficients[[2]])
}
stats = cbind(t(theLatest),theMean,theMax$x,theMin$x,theSd$x,t(trend))
names(stats) <- c("latest","indicator","mean","max","min","sd","trend")
stats
}
te.stats.analysis(1,country,indicator)
country
indicator
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
dataFrame
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame$Close)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EA17"
dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
theMean = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"mean" )
theMean
theMax = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"max" )
theMax
theMin = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"min" )
theMin
theSd
theSd
theSd = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"sd" )
theSd
theLatest = c()
trend = c()
inStudy = unique(dataFrame$Indicator)
inStudy
for(i in 1:length(inStudy)){
temp = (dataFrame[dataFrame$Indicator == inStudy[i],])
theLatest = cbind(theLatest,head(temp[order(temp$DateTime, decreasing = T),],1)$Close)
theLatestFew = lm(length(head(temp[order(temp$DateTime, decreasing = T),],5)$Close):1~head(temp[order(temp$DateTime, decreasing = T),],5)$Close)
trend = cbind(trend,theLatestFew$coefficients[[2]])
}
for(i in 1:length(inStudy)){
temp = (dataFrame[dataFrame$Indicator == inStudy[i],])
theLatest = cbind(theLatest,head(temp[order(temp$DateTime, decreasing = T),],1)$Close)
theLatestFew = lm(length(head(temp[order(temp$DateTime, decreasing = T),],5)$Close):1~head(temp[order(temp$DateTime, decreasing = T),],5)$Close)
trend = cbind(trend,theLatestFew$coefficients[[2]])
}
trend
head(temp[order(temp$DateTime, decreasing = T),],5)
cbind(2,1)
trend
t(trend)
stats = cbind(t(theLatest),theMean,theMax$x,theMin$x,theSd$x,t(trend))
stats
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
d1
country
indicator
contArray = country
indArray = indicator
contArray = unique(contArray)
indArray = unique(indArray)
if(contArray[1]=="all"){
country="all"
}else{
country="rAppsOCPU"
for(i in 1:length(contArray)){
country=paste(country,contArray[i],sep=",")
}
}
if(indArray[1]=="all"){
indicator="all"
}else{
indicator="rAppsOCPU"
for(i in 1:length(indArray)){
indicator=paste(indicator,indArray[i],sep=",")
}
}
url = paste(te.connect.new(), "/historical/country/",URLencode(country),"/indicator/",URLencode(indicator),"/",d1,"?f=csv",sep="");
url
i=7
temp = (dataFrame[dataFrame$Indicator == inStudy[i],])
temp
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
dataFrame
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame$Close)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EA17"
dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
theMean = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"mean" )
theMax = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"max" )
theMin = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"min" )
theSd = aggregate(dataFrame$Close,list(d=dataFrame$Indicator),"sd" )
temp = (dataFrame[dataFrame$Indicator == inStudy[i],])
temp
theLatest = cbind(theLatest,head(temp[order(temp$DateTime, decreasing = T),],1)$Close)
theLatest
theLatest = c()
theLatest = cbind(theLatest,head(temp[order(temp$DateTime, decreasing = T),],1)$Close)
theLatest
temp
theLatest
head(temp[order(temp$DateTime, decreasing = T),],5)$Close
length(head(temp[order(temp$DateTime, decreasing = T),],5)$Close):1
head(temp[order(temp$DateTime, decreasing = T),],5)$Close
lm(length(head(temp[order(temp$DateTime, decreasing = T),],5)$Close):1~head(temp[order(temp$DateTime, decreasing = T),],5)$Close)
url
contArray
indArray
d1 = NULL
contArray = unique(contArray)
indArray = unique(indArray)
if(contArray[1]=="all"){
country="all"
}else{
country="rAppsOCPU"
for(i in 1:length(contArray)){
country=paste(country,contArray[i],sep=",")
}
}
if(indArray[1]=="all"){
indicator="all"
}else{
indicator="rAppsOCPU"
for(i in 1:length(indArray)){
indicator=paste(indicator,indArray[i],sep=",")
}
}
url = paste(te.connect.new(), "/historical/country/",URLencode(country),"/indicator/",URLencode(indicator),"/",d1,"?f=csv",sep="");
url
RCURLgetURL(url)
d1="NULL"
contArray = unique(contArray)
indArray = unique(indArray)
if(contArray[1]=="all"){
country="all"
}else{
country="rAppsOCPU"
for(i in 1:length(contArray)){
country=paste(country,contArray[i],sep=",")
}
}
if(indArray[1]=="all"){
indicator="all"
}else{
indicator="rAppsOCPU"
for(i in 1:length(indArray)){
indicator=paste(indicator,indArray[i],sep=",")
}
}
url = paste(te.connect.new(), "/historical/country/",URLencode(country),"/indicator/",URLencode(indicator),"/",d1,"?f=csv",sep="");
url
df = read.csv(textConnection(RCURLgetURL(url)), row.names=NULL)
df
theLatest
lm(1:5 ~ c(25.4,25.6,25.5,25.3,25.3))
?lm
lm(c(25.4,25.6,25.5,25.3,25.3) ~ 1:5)
LatestArray = head(temp[order(temp$DateTime, decreasing = T),],5)$Close
LatestArray
vanillaArray = length(head(temp[order(temp$DateTime, decreasing = T),],5)$Close):1
vanillaArray
gl(2, 10, 20, labels = c("Ctl","Trt"))
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
wigth
weigth
weight
lm(weight ~ group)
group
?gl
?lm
length(vanillaArray)
theLatestFew = lm(weight~group)
theLatestFew
