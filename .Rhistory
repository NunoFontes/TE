if(tolower(freq$frequency)=="quarterly" && format(as.Date(fromDB$DateTime),"%d")[1]=="15"){
a=0
for(j in 1:length(fromDB[fromDB$Symbol==catg[i],]$DateTime)){
a[j] = as.character(add.months(as.Date(fromDB[fromDB$Symbol==catg[i],]$DateTime[j]),1))
}
fromDB[fromDB$Symbol==catg[i],]$DateTime = a
}
temp=zoo(fromDB[fromDB$Symbol==catg[i],]$Close,as.yearmon(as.Date(fromDB[fromDB$Symbol==catg[i],]$DateTime)))
if(length(temp)<2){return(0);}
temp=aggregate(temp,identity,mean)
temp=na.approx(temp, xout=as.yearmon(start(temp)+(0:(DIM))/12))
object=merge(object,temp)
}}
}else{query = paste("select top 1 frequency, category from tickers where historicaldatasymbol ='",ticker,"'",sep="")
freq=sqlQuery(database, query)
object=zoo(fromDB[fromDB$Symbol==catg[1],]$Close,as.Date(fromDB[fromDB$Symbol==catg[1],]$DateTime))
}
names(object)=names
#print(object)
print(Sys.time()-ctime)
return(list(object,catg,as.character((freq$category)[1]),as.character((freq$frequency)[1])))
#return(list(object,catg,as.character((fromDB$cat)[1]),as.character((fromDB$freq)[1])))
}
runItMMongoDB("PSI20",T)
ticker="PSI20"
getVariablesMongoDB(ticker)
getVariablesMongoDB = function(ticker,model="ALL"){
print("getVariablesMongoDB")
ticker=tolower(gsub("^\\s+|\\s+$", "",ticker))
#ctime=Sys.time()
#print(ticker)
#mongo <- mongoDbConnect('Forecasts',host='forecasts.tradingeconomics.com')
if (tolower(model)=="all"){request=paste('{"Ticker": "',ticker,'","Variables": {"$gt":"a"}}',sep="")
}else if (tolower(model)=="bestmodel"){
bestmodel = getBestModelMongoDB(ticker)
request=paste('{"Model":{"$regex":"',bestmodel,'","$options":"i"},"Ticker": "',ticker,'","Variables": {"$gt":"a"}}',sep="")
}else{
request=paste('{"Model":{"$regex":"',model,'","$options":"i"},"Ticker": "',ticker,'","Variables": {"$gt":"a"}}',sep="")
}
#print(request)
query <- dbGetQueryForKeys(mongo, 'ForecastVariables', request,'{"Model":1,"Variables":1}')
#print(query)
#dbDisconnect(mongo)
#print(Sys.time()-ctime)
if(length(query)<1) return(c(NA))
return (query)
}
runItMMongoDB("PSI20",T)
mongo <- mongoDbConnect('TE',host='forecasts.tradingeconomics.com')
source("C:/git/Forecasts/nodeWS/NRscript/libraries.R")
mongo <- mongoDbConnect('TE',host='forecasts.tradingeconomics.com')
runItMMongoDB("PSI20",T)
getVariablesMongoDB(ticker)
print("On Function getForecastM")
flush.console()
debug = FALSE
TIMEWINDOW=2
LAYERS=1
FREQUENCY="daily"
LEARNINGRATE=0.5
THRESHOLD=0.05
FUNCTION="tanh"
if(debug){
print("-------------------------------------------------------------------------")
print("On Function getForecastM starting ticker:")
print(ticker)
print(Sys.time())
}
jason=getVariablesMongoDB(ticker);
variables=jason$variables;model=jason$model
variables
variables=jason$Variables;model=jason$Model
variables
getForecastMMongoDB=function(ticker,insert=FALSE,freq=NULL,step=1,spice=0){
print("On Function getForecastM")
flush.console()
debug = FALSE
TIMEWINDOW=2
LAYERS=1
FREQUENCY="daily"
LEARNINGRATE=0.5
THRESHOLD=0.05
FUNCTION="tanh"
if(debug){
print("-------------------------------------------------------------------------")
print("On Function getForecastM starting ticker:")
print(ticker)
print(Sys.time())
}
jason=getVariablesMongoDB(ticker);
variables=jason$Variables;model=jason$Model
if(debug){print(variables)}
for(i in 1:max(1,length(variables))){
if(debug){print(i)}
if(debug){print(variables[i])}
if(length(variables[i])==0){next}
if(is.na(variables[i])){next}
if(variables[i]=="delete"){next}
if(debug){print("variables is valid.")}
directions=fromJSON(as.character(variables[i]))
if (is.null(directions$m)){next}else{ticker=directions$m}
if (!is.null(directions$timewindow) && is.numeric(directions$timewindow)){TIMEWINDOW=directions$timewindow}
if (!is.null(directions$layer) && is.numeric(directions$layer)){LAYERS=directions$layer}
if (!is.null(directions$learn) && is.numeric(directions$learn)){LEARNINGRATE=directions$learnrate}
if (!is.null(directions$threshold) && is.numeric(directions$threshold)){THRESHOLD=directions$threshold}
if (!is.null(directions$freq)){FREQUENCY=directions$freq}
if (!is.null(directions$func)){FUNCTION=directions$func}
if (!is.null(freq) && freq!=FREQUENCY && freq != "self"){next}
data=getDataMMongoDB(ticker,TIMEWINDOW)
if(debug){print("length of data :");print(length(data))}
if(!is.list(data)){next;}
if (!is.null(freq) && freq == "self"){FREQUENCY = tolower(data[[4]])}
if(length(data[[1]])<10){next;}
if(FREQUENCY=="day" || FREQUENCY=="daily"){LAG=5;wdata=data[[1]]}
if(FREQUENCY=="week" || FREQUENCY=="weekly"){LAG=4;wdata=aggregate(data[[1]], week.freq, tail, 1)}
if(FREQUENCY=="month" || FREQUENCY=="monthly"){LAG=2;wdata=aggregate(data[[1]], month.freq, tail, 1)}
if(max(wdata)==min(wdata)){next}
nnfit=getNeuralNet(wdata,LAG=LAG,hid=LAYERS,thre=THRESHOLD,lr=LEARNINGRATE,af=FUNCTION)
if(is.null(nnfit[[1]]$weights)){next}
if(is.null(frequency(wdata))){next}
pred=interpretNN(nnfit[[1]],wdata,nnfit[[2]],LAG=LAG,center=nnfit[[3]],steps=step,spiced=spice)
pred[[1]]=round(pred[[1]],2)
#print(pred)
if(insert){
if(FREQUENCY=="day"|| FREQUENCY=="daily"){
nextperiod=1
if(format(time(data[[1]][length(data[[1]])]), "%w") %in% 5){nextperiod=3}
for (j in 1:length(pred[[1]])){
p=as.zoo(as.matrix(pred[[1]][j]),time(data[[1]][length(data[[1]])])+nextperiod+j-1)
diag=pushToDBMMongoDB(ticker,p,pred[[2]][j],pred[[3]][j],model[i],freq=FREQUENCY)
}
}
if(FREQUENCY=="week" || FREQUENCY=="weekly"){
nextperiod=7
for (j in 1:length(pred[[1]])){
p=as.zoo(as.matrix(pred[[1]][j]),time(data[[1]][length(data[[1]])])+nextperiod*j)
diag=pushToDBMMongoDB(ticker,p,pred[[2]][j],pred[[3]][j],model[i],freq=FREQUENCY)
}
}
if(FREQUENCY=="month" || FREQUENCY=="monthly"){
for (j in 1:length(pred[[1]])){
p=as.zoo(as.matrix(pred[[1]][j]),as.yearmon(time(wdata[length(wdata)]))+j*1/12)
diag=pushToDBMMongoDB(ticker,p,pred[[2]][j],pred[[3]][j],model[i],freq=FREQUENCY)
}
}
}
}
return (diag)
}
runItMM
runItMMongoDB("PSI20",T)
getDataMMongoDB=function(tickers,range=NULL){
print("getDataMMongoDB")
flush.console()
DIM=2^11
if (is.null(range) || !is.numeric(range)){rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-10,'"}}',sep="")}else{rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-range,'"}}',sep="")}
tempQuery = '"NotReallyASymbol"'
ticker=gsub("'", "", ticker)
ticker=strsplit(ticker,",")[[1]]
if(length(ticker)==1) myQuery = paste('{"Symbol":"', ticker,'"',sep="")
if(length(ticker)>1){
for(k in 1:length(ticker))
tempQuery = paste(tempQuery,paste( ',"',ticker[k],'"',sep=""),sep="")
myQuery =paste('{"Symbol":{ "$in" : [',tempQuery,'] }',sep="")
}
mongoGetQuery = paste('{"$query" :',myQuery,' ',rangeMDB,',"$orderby":{"DateTime":-1}}',sep="")
fromDB <- dbGetQueryForKeys(mongo, 'HistoricalData', mongoGetQuery,'{}', skip=0,limit=50000)
fromDB$Symbol=tolower(gsub("^\\s+|\\s+$", "",fromDB$Symbol))
catg=unique(unlist(fromDB$Symbol))
names=catg
if (length(catg)==1){
query = paste("select top 1 frequency, category from tickers where historicaldatasymbol ='",catg[1],"'",sep="")
freq=sqlQuery(database, query)
if(length(freq$frequency)==0) next
if(tolower(freq$frequency)=="quarterly" && format(as.Date(fromDB$DateTime),"%d")[1]=="15"){
a=0
for(i in 1:length(fromDB$DateTime)){
a[i] = as.Date(add.months(as.Date(fromDB$DateTime[i]),1))
}
fromDB$DateTime = a
}
object=zoo(fromDB[fromDB$Symbol==catg[1],]$Close,as.yearmon(as.Date(fromDB[fromDB$Symbol==catg[1],]$DateTime)))
object=aggregate(object,identity,mean)
if(length(object)>1)
object=na.approx(object, xout=as.yearmon(start(object)+(0:(DIM))/12))
}
if (length(catg)>1){
query = paste("select top 1 frequency, category from tickers where historicaldatasymbol ='",catg[1],"'",sep="")
freq=sqlQuery(database, query)
if(length(freq$frequency)==0) {names=names[names!=catg[1]];}else{
if(tolower(freq$frequency)=="quarterly" && format(as.Date(fromDB$DateTime),"%d")[1]=="15"){
a=0
for(j in 1:length(fromDB[fromDB$Symbol==catg[1],]$DateTime)){
a[j] = as.character(add.months(as.Date(fromDB[fromDB$Symbol==catg[1],]$DateTime[j]),1))
}
fromDB[fromDB$Symbol==catg[1],]$DateTime = a
}
object=zoo(fromDB[fromDB$Symbol==catg[1],]$Close,as.yearmon(as.Date(fromDB[fromDB$Symbol==catg[1],]$DateTime)))
object=aggregate(object,identity,mean)
}
for (i in 2:length(catg)){
query = paste("select top 1 frequency, category from tickers where historicaldatasymbol ='",catg[i],"'",sep="")
freq=sqlQuery(database, query)
if(length(freq$frequency)==0){names=names[names!=catg[i]];next}
if(tolower(freq$frequency)=="quarterly" && format(as.Date(fromDB$DateTime),"%d")[1]=="15"){
a=0
for(j in 1:length(fromDB[fromDB$Symbol==catg[i],]$DateTime)){
a[j] = as.character(add.months(as.Date(fromDB[fromDB$Symbol==catg[i],]$DateTime[j]),1))
}
fromDB[fromDB$Symbol==catg[i],]$DateTime = a
}
temp=zoo(fromDB[fromDB$Symbol==catg[i],]$Close,as.yearmon(as.Date(fromDB[fromDB$Symbol==catg[i],]$DateTime)))
if(length(temp)<2){return(0);}
temp=aggregate(temp,identity,mean)
temp=na.approx(temp, xout=as.yearmon(start(temp)+(0:(DIM))/12))
object=merge(object,temp)
}}
names(object)=names
#print(object)
print(Sys.time()-ctime)
return(list(object,catg,as.character((freq$category)[1]),as.character((freq$frequency)[1])))
#return(list(object,catg,as.character((fromDB$cat)[1]),as.character((fromDB$freq)[1])))
}
runItMMongoDB("PSI20",T)
ticker
range=NULL
if (is.null(range) || !is.numeric(range)){rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-10,'"}}',sep="")}else{rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-range,'"}}',sep="")}
tempQuery = '"NotReallyASymbol"'
ticker=gsub("'", "", ticker)
ticker=strsplit(ticker,",")[[1]]
if(length(ticker)==1) myQuery = paste('{"Symbol":"', ticker,'"',sep="")
if(length(ticker)>1){
for(k in 1:length(ticker))
tempQuery = paste(tempQuery,paste( ',"',ticker[k],'"',sep=""),sep="")
myQuery =paste('{"Symbol":{ "$in" : [',tempQuery,'] }',sep="")
}
myQuery
mongoGetQuery = paste('{"$query" :',myQuery,' ',rangeMDB,',"$orderby":{"DateTime":-1}}',sep="")
mongoGetQuery
fromDB <- dbGetQueryForKeys(mongo, 'HistoricalData', mongoGetQuery,'{}', skip=0,limit=50000)
fromDB
getDataMMongoDB=function(tickers,range=NULL){
print("getDataMMongoDB")
flush.console()
DIM=2^11
if (is.null(range) || !is.numeric(range)){rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-10,'"}}',sep="")}else{rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-range,'"}}',sep="")}
ticker=tolower(gsub("^\\s+|\\s+$", "",ticker))
tempQuery = '"NotReallyASymbol"'
ticker=gsub("'", "", ticker)
ticker=strsplit(ticker,",")[[1]]
if(length(ticker)==1) myQuery = paste('{"Symbol":"', ticker,'"',sep="")
if(length(ticker)>1){
for(k in 1:length(ticker))
tempQuery = paste(tempQuery,paste( ',"',ticker[k],'"',sep=""),sep="")
myQuery =paste('{"Symbol":{ "$in" : [',tempQuery,'] }',sep="")
}
mongoGetQuery = paste('{"$query" :',myQuery,' ',rangeMDB,',"$orderby":{"DateTime":-1}}',sep="")
fromDB <- dbGetQueryForKeys(mongo, 'HistoricalData', mongoGetQuery,'{}', skip=0,limit=50000)
fromDB$Symbol=tolower(gsub("^\\s+|\\s+$", "",fromDB$Symbol))
catg=unique(unlist(fromDB$Symbol))
names=catg
if (length(catg)==1){
query = paste("select top 1 frequency, category from tickers where historicaldatasymbol ='",catg[1],"'",sep="")
freq=sqlQuery(database, query)
if(length(freq$frequency)==0) next
if(tolower(freq$frequency)=="quarterly" && format(as.Date(fromDB$DateTime),"%d")[1]=="15"){
a=0
for(i in 1:length(fromDB$DateTime)){
a[i] = as.Date(add.months(as.Date(fromDB$DateTime[i]),1))
}
fromDB$DateTime = a
}
object=zoo(fromDB[fromDB$Symbol==catg[1],]$Close,as.yearmon(as.Date(fromDB[fromDB$Symbol==catg[1],]$DateTime)))
object=aggregate(object,identity,mean)
if(length(object)>1)
object=na.approx(object, xout=as.yearmon(start(object)+(0:(DIM))/12))
}
if (length(catg)>1){
query = paste("select top 1 frequency, category from tickers where historicaldatasymbol ='",catg[1],"'",sep="")
freq=sqlQuery(database, query)
if(length(freq$frequency)==0) {names=names[names!=catg[1]];}else{
if(tolower(freq$frequency)=="quarterly" && format(as.Date(fromDB$DateTime),"%d")[1]=="15"){
a=0
for(j in 1:length(fromDB[fromDB$Symbol==catg[1],]$DateTime)){
a[j] = as.character(add.months(as.Date(fromDB[fromDB$Symbol==catg[1],]$DateTime[j]),1))
}
fromDB[fromDB$Symbol==catg[1],]$DateTime = a
}
object=zoo(fromDB[fromDB$Symbol==catg[1],]$Close,as.yearmon(as.Date(fromDB[fromDB$Symbol==catg[1],]$DateTime)))
object=aggregate(object,identity,mean)
}
for (i in 2:length(catg)){
query = paste("select top 1 frequency, category from tickers where historicaldatasymbol ='",catg[i],"'",sep="")
freq=sqlQuery(database, query)
if(length(freq$frequency)==0){names=names[names!=catg[i]];next}
if(tolower(freq$frequency)=="quarterly" && format(as.Date(fromDB$DateTime),"%d")[1]=="15"){
a=0
for(j in 1:length(fromDB[fromDB$Symbol==catg[i],]$DateTime)){
a[j] = as.character(add.months(as.Date(fromDB[fromDB$Symbol==catg[i],]$DateTime[j]),1))
}
fromDB[fromDB$Symbol==catg[i],]$DateTime = a
}
temp=zoo(fromDB[fromDB$Symbol==catg[i],]$Close,as.yearmon(as.Date(fromDB[fromDB$Symbol==catg[i],]$DateTime)))
if(length(temp)<2){return(0);}
temp=aggregate(temp,identity,mean)
temp=na.approx(temp, xout=as.yearmon(start(temp)+(0:(DIM))/12))
object=merge(object,temp)
}}
names(object)=names
#print(object)
print(Sys.time()-ctime)
return(list(object,catg,as.character((freq$category)[1]),as.character((freq$frequency)[1])))
#return(list(object,catg,as.character((fromDB$cat)[1]),as.character((fromDB$freq)[1])))
}
runItMMongoDB("PSI20",T)
database=odbcDriverConnect("DRIVER=SQL Server;SERVER=API.TRADINGECONOMICS.COM;DATABASE=TE;UId=TEAnalyst;PWD=TEAnalyst!1")
runItMMongoDB("PSI20",T)
getDataMMongoDB=function(tickers,range=NULL){
print("getDataMMongoDB")
flush.console()
DIM=2^11
if (is.null(range) || !is.numeric(range)){rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-10,'"}}',sep="")}else{rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-range,'"}}',sep="")}
ticker=tolower(gsub("^\\s+|\\s+$", "",ticker))
tempQuery = '"NotReallyASymbol"'
ticker=gsub("'", "", ticker)
ticker=strsplit(ticker,",")[[1]]
if(length(ticker)==1) myQuery = paste('{"Symbol":"', ticker,'"',sep="")
if(length(ticker)>1){
for(k in 1:length(ticker))
tempQuery = paste(tempQuery,paste( ',"',ticker[k],'"',sep=""),sep="")
myQuery =paste('{"Symbol":{ "$in" : [',tempQuery,'] }',sep="")
}
mongoGetQuery = paste('{"$query" :',myQuery,' ',rangeMDB,',"$orderby":{"DateTime":-1}}',sep="")
fromDB <- dbGetQueryForKeys(mongo, 'HistoricalData', mongoGetQuery,'{}', skip=0,limit=50000)
fromDB$Symbol=tolower(gsub("^\\s+|\\s+$", "",fromDB$Symbol))
catg=unique(unlist(fromDB$Symbol))
names=catg
if (length(catg)==1){
query = paste("select top 1 frequency, category from tickers where historicaldatasymbol ='",catg[1],"'",sep="")
freq=sqlQuery(database, query)
if(length(freq$frequency)==0) next
if(tolower(freq$frequency)=="quarterly" && format(as.Date(fromDB$DateTime),"%d")[1]=="15"){
a=0
for(i in 1:length(fromDB$DateTime)){
a[i] = as.Date(add.months(as.Date(fromDB$DateTime[i]),1))
}
fromDB$DateTime = a
}
object=zoo(fromDB[fromDB$Symbol==catg[1],]$Close,as.yearmon(as.Date(fromDB[fromDB$Symbol==catg[1],]$DateTime)))
object=aggregate(object,identity,mean)
if(length(object)>1)
object=na.approx(object, xout=as.yearmon(start(object)+(0:(DIM))/12))
}
if (length(catg)>1){
query = paste("select top 1 frequency, category from tickers where historicaldatasymbol ='",catg[1],"'",sep="")
freq=sqlQuery(database, query)
if(length(freq$frequency)==0) {names=names[names!=catg[1]];}else{
if(tolower(freq$frequency)=="quarterly" && format(as.Date(fromDB$DateTime),"%d")[1]=="15"){
a=0
for(j in 1:length(fromDB[fromDB$Symbol==catg[1],]$DateTime)){
a[j] = as.character(add.months(as.Date(fromDB[fromDB$Symbol==catg[1],]$DateTime[j]),1))
}
fromDB[fromDB$Symbol==catg[1],]$DateTime = a
}
object=zoo(fromDB[fromDB$Symbol==catg[1],]$Close,as.yearmon(as.Date(fromDB[fromDB$Symbol==catg[1],]$DateTime)))
object=aggregate(object,identity,mean)
}
for (i in 2:length(catg)){
query = paste("select top 1 frequency, category from tickers where historicaldatasymbol ='",catg[i],"'",sep="")
freq=sqlQuery(database, query)
if(length(freq$frequency)==0){names=names[names!=catg[i]];next}
if(tolower(freq$frequency)=="quarterly" && format(as.Date(fromDB$DateTime),"%d")[1]=="15"){
a=0
for(j in 1:length(fromDB[fromDB$Symbol==catg[i],]$DateTime)){
a[j] = as.character(add.months(as.Date(fromDB[fromDB$Symbol==catg[i],]$DateTime[j]),1))
}
fromDB[fromDB$Symbol==catg[i],]$DateTime = a
}
temp=zoo(fromDB[fromDB$Symbol==catg[i],]$Close,as.yearmon(as.Date(fromDB[fromDB$Symbol==catg[i],]$DateTime)))
if(length(temp)<2){return(0);}
temp=aggregate(temp,identity,mean)
temp=na.approx(temp, xout=as.yearmon(start(temp)+(0:(DIM))/12))
object=merge(object,temp)
}}
names(object)=names
return(list(object,catg,as.character((freq$category)[1]),as.character((freq$frequency)[1])))
#return(list(object,catg,as.character((fromDB$cat)[1]),as.character((fromDB$freq)[1])))
}
runItMMongoDB("PSI20",T)
ticker
flush.console()
DIM=2^11
if (is.null(range) || !is.numeric(range)){rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-10,'"}}',sep="")}else{rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-range,'"}}',sep="")}
ticker=tolower(gsub("^\\s+|\\s+$", "",ticker))
tempQuery = '"NotReallyASymbol"'
ticker=gsub("'", "", ticker)
ticker=strsplit(ticker,",")[[1]]
if(length(ticker)==1) myQuery = paste('{"Symbol":"', ticker,'"',sep="")
if(length(ticker)>1){
for(k in 1:length(ticker))
tempQuery = paste(tempQuery,paste( ',"',ticker[k],'"',sep=""),sep="")
myQuery =paste('{"Symbol":{ "$in" : [',tempQuery,'] }',sep="")
}
myQuery
mongoGetQuery = paste('{"$query" :',myQuery,' ',rangeMDB,',"$orderby":{"DateTime":-1}}',sep="")
mongoGetQuery
fromDB <- dbGetQueryForKeys(mongo, 'HistoricalData', mongoGetQuery,'{}', skip=0,limit=50000)
fromDB
fromDB <- dbGetQueryForKeys(mongo, 'HistoricalData', mongoGetQuery,'{}', skip=0,limit=50)
fromDB
fromDB <- dbGetQueryForKeys(mongo, 'HistoricalData', mongoGetQuery,'{}', skip=0,limit=5000)
fromDB
fromDB <- dbGetQueryForKeys(mongo, 'HistoricalData', mongoGetQuery,'{}', skip=0,limit=1000)
fromDB
fromDB$Symbol=tolower(gsub("^\\s+|\\s+$", "",fromDB$Symbol))
catg=unique(unlist(fromDB$Symbol))
catg
names=catg
length(catg)==1
query = paste("select top 1 frequency, category from tickers where historicaldatasymbol ='",catg[1],"'",sep="")
freq=sqlQuery(database, query)
freq
if(length(freq$frequency)==0) next
object=zoo(fromDB[fromDB$Symbol==catg[1],]$Close,as.yearmon(as.Date(fromDB[fromDB$Symbol==catg[1],]$DateTime)))
object
getDataMMongoDB=function(tickers,range=NULL){
print("getDataMMongoDB")
flush.console()
DIM=2^11
if (is.null(range) || !is.numeric(range)){rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-10,'"}}',sep="")}else{rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-range,'"}}',sep="")}
ticker=tolower(gsub("^\\s+|\\s+$", "",ticker))
tempQuery = '"NotReallyASymbol"'
ticker=gsub("'", "", ticker)
ticker=strsplit(ticker,",")[[1]]
if(length(ticker)==1) myQuery = paste('{"Symbol":"', ticker,'"',sep="")
if(length(ticker)>1){
for(k in 1:length(ticker))
tempQuery = paste(tempQuery,paste( ',"',ticker[k],'"',sep=""),sep="")
myQuery =paste('{"Symbol":{ "$in" : [',tempQuery,'] }',sep="")
}
mongoGetQuery = paste('{"$query" :',myQuery,' ',rangeMDB,',"$orderby":{"DateTime":-1}}',sep="")
fromDB <- dbGetQueryForKeys(mongo, 'HistoricalData', mongoGetQuery,'{}', skip=0,limit=1000)
if (length(fromDB$value)==0) {return (0)}
fromDB$symbol=tolower(gsub("^\\s+|\\s+$", "",fromDB$symbol))
catg=unique(unlist(fromDB$symbol))
object=zoo(fromDB[fromDB$symbol==catg[1],]$value,as.Date(fromDB[fromDB$symbol==catg[1],]$datetime))
names(object)=catg
query = paste("select top 1 frequency, category from tickers where historicaldatasymbol ='",catg[1],"'",sep="")
freq=sqlQuery(database, query)
if(length(freq$frequency)==0) {return (0)}
return(list(object,catg,as.character((freq$category)[1]),as.character((freq$frequency)[1])))
#return(list(object,catg,as.character((fromDB$cat)[1]),as.character((fromDB$freq)[1])))
}
runItMMongoDB("PSI20",T)
ticker
print("getDataMMongoDB")
flush.console()
DIM=2^11
if (is.null(range) || !is.numeric(range)){rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-10,'"}}',sep="")}else{rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-range,'"}}',sep="")}
ticker=tolower(gsub("^\\s+|\\s+$", "",ticker))
tempQuery = '"NotReallyASymbol"'
ticker=gsub("'", "", ticker)
ticker=strsplit(ticker,",")[[1]]
if(length(ticker)==1) myQuery = paste('{"Symbol":"', ticker,'"',sep="")
if(length(ticker)>1){
for(k in 1:length(ticker))
tempQuery = paste(tempQuery,paste( ',"',ticker[k],'"',sep=""),sep="")
myQuery =paste('{"Symbol":{ "$in" : [',tempQuery,'] }',sep="")
}
mongoGetQuery = paste('{"$query" :',myQuery,' ',rangeMDB,',"$orderby":{"DateTime":-1}}',sep="")
fromDB <- dbGetQueryForKeys(mongo, 'HistoricalData', mongoGetQuery,'{}', skip=0,limit=1000)
if (length(fromDB$value)==0) {return (0)}
fromDB$symbol=tolower(gsub("^\\s+|\\s+$", "",fromDB$symbol))
catg=unique(unlist(fromDB$symbol))
object=zoo(fromDB[fromDB$symbol==catg[1],]$value,as.Date(fromDB[fromDB$symbol==catg[1],]$datetime))
names(object)=catg
query = paste("select top 1 frequency, category from tickers where historicaldatasymbol ='",catg[1],"'",sep="")
freq=sqlQuery(database, query)
if(length(freq$frequency)==0) {return (0)}
fromDB
length(fromDB$value
)
length(fromDB$Close)==0
getDataMMongoDB=function(tickers,range=NULL){
print("getDataMMongoDB")
flush.console()
DIM=2^11
if (is.null(range) || !is.numeric(range)){rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-10,'"}}',sep="")}else{rangeMDB=paste(',"DateTime":{"$gt":"',as.numeric(format(Sys.Date(),"%Y"))-range,'"}}',sep="")}
ticker=tolower(gsub("^\\s+|\\s+$", "",ticker))
tempQuery = '"NotReallyASymbol"'
ticker=gsub("'", "", ticker)
ticker=strsplit(ticker,",")[[1]]
if(length(ticker)==1) myQuery = paste('{"Symbol":"', ticker,'"',sep="")
if(length(ticker)>1){
for(k in 1:length(ticker))
tempQuery = paste(tempQuery,paste( ',"',ticker[k],'"',sep=""),sep="")
myQuery =paste('{"Symbol":{ "$in" : [',tempQuery,'] }',sep="")
}
mongoGetQuery = paste('{"$query" :',myQuery,' ',rangeMDB,',"$orderby":{"DateTime":-1}}',sep="")
fromDB <- dbGetQueryForKeys(mongo, 'HistoricalData', mongoGetQuery,'{}', skip=0,limit=1000)
if (length(fromDB$Close)==0) {return (0)}
fromDB$Symbol=tolower(gsub("^\\s+|\\s+$", "",fromDB$Symbol))
catg=unique(unlist(fromDB$Symbol))
object=zoo(fromDB[fromDB$Symbol==catg[1],]$Close,as.Date(fromDB[fromDB$Symbol==catg[1],]$DateTime))
names(object)=catg
query = paste("select top 1 frequency, category from tickers where historicaldatasymbol ='",catg[1],"'",sep="")
freq=sqlQuery(database, query)
if(length(freq$frequency)==0) {return (0)}
return(list(object,catg,as.character((freq$category)[1]),as.character((freq$frequency)[1])))
#return(list(object,catg,as.character((fromDB$cat)[1]),as.character((fromDB$freq)[1])))
}
runItMMongoDB("PSI20",T)
