for(rows in 1:dim(df)[1]){
if(length(grep("thousand million", df[rows,]$Unit))>0){
df[rows,]$Value = df[rows,]$Value*100000
}
else if(length(grep("hundred million", df[rows,]$Unit))>0){
df[rows,]$Value = df[rows,]$Value*100000000
}
else if(length(grep("billion", df[rows,]$Unit))>0){
df[rows,]$Value = df[rows,]$Value*1000000000
}
else if(length(grep("million", df[rows,]$Unit))>0){
df[rows,]$Value = df[rows,]$Value*1000000
}
else if(length(grep("hundred", df[rows,]$Unit))>0){
df[rows,]$Value = df[rows,]$Value*100
}
else if(length(grep("thousand", df[rows,]$Unit))>0){
df[rows,]$Value = df[rows,]$Value*1000
}
}
df
}
te.pie.chart=function(c,country,indicator,d1="NULL",opts=NULL){
options(stringsAsFactors = FALSE)
#df=te.get.hist.multi.free(c,country,indicator,"last")
if(length(country)>1 && length(indicator)>1){
df=te.get.mat.new(country,indicator[1])}else{df=te.get.mat.new(country,indicator)}
df <- df[c("Country","Category","DateTime","Value","Unit")]
if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(unique(df$Category))==1) df = te.unit.converter(df)
df$Country[!is.na(countrycode(df$Country,"country.name","iso3c"))] <- countrycode(df$Country,"country.name","iso3c")[!is.na(countrycode(df$Country,"country.name","iso3c"))]
df$Country[tolower(df$Country)=="euro area"] <- "EA17"
df$Country[df$Value<0] <- paste("(-)",df$Country[df$Value<0],sep="")
df$Value <- abs(df$Value)
df$Value <- df$Value/sum(df$Value)
df$p <- cumsum(df$Value)-diff(c(0,cumsum(df$Value)))*(1-0.5)
ggplot(data=df, aes(x=factor(1),y=Value, fill=factor(Country), weight=Value))+
geom_bar(width=1,stat="identity",colour="black") +
coord_polar(theta="y")  +
geom_text(aes(x=1.5,y=p, angle=-p*360,label=Country,vjust=0)) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.title.y= element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.ticks=element_blank(),
legend.position = "none")
#+ ggtitle(indicator)
}
te.table=function(c,countries,indicators,d1="2005",what="NULL"){
if(what=="te.plot.compare.scale"|| what=="te.plot.compare" || what=="te.geomap" || what=="te.tree.map" || what=="te.heat.map"){d1="last"}
if(what=="te.geomap"){countries=te.countries(c,"G200")}
if(what=="te.correlation.matrix"){d1="1950"}
df=te.get.hist.multi.free.new(c,countries,indicators,d1)
if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
#df$DateTime <- as.character(as.yearmon(df$DateTime))
#df$DateTime <- as.character(as.yearmon(df$DateTime))
#df
as.list(df)
}
#te.table(c,"argentina","youth unemployment rate")
te.correlation.matrix=function(c,country,indicator,d1="NULL",opts=NULL){
options(stringsAsFactors = FALSE)
#df=te.get.hist.multi.free(c,country,indicator,d1="2012")
df=te.get.hist.multi.free.new(country,indicator,d1="2007-12-01")
if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
df$Country[!is.na(countrycode(df$Country,"country.name","iso3c"))] <- countrycode(df$Country,"country.name","iso3c")[!is.na(countrycode(df$Country,"country.name","iso3c"))]
df$Country[tolower(df$Country)=="euro area"] <- "EA17"
if(length(country)==1){
titl=paste(country,"Indicators",sep=" - ")
df$Indicator <- sapply(df, function(x) paste(df$Category,sep=""))[,1]
}else if(length(indicator)==1){
titl=paste(indicator,"Countries",sep=" - ")
df$Indicator <- sapply(df, function(x) paste(substr(df$Country,1,4),sep=""))[,1]
}else{
titl="TODO"
df$Indicator <- sapply(df, function(x) paste(substr(df$Country,1,4),df$Category,sep=" - "))[,1]
}
df$DateTime <- as.yearmon(df$DateTime)
#df$DateTime <- as.yearqtr(df$DateTime)
ndf = cast(df,DateTime ~ Indicator,value = "Close",fun.aggregate="mean")
for(cols in 2:dim(ndf)[2]){ndf[!complete.cases(ndf[cols]),cols]<-NA; ndf[[cols]]<-na.approx(zoo(ndf[[cols]],as.yearmon(ndf[[1]],"%b%y")),na.rm=F)}
#ndf
names=names(ndf)
#ndf=as.data.frame(na.omit(na.trim(na.approx(ndf[,2:length(names(ndf))]))))
#names(ndf)=names[2:length(names)]
#if(length(na.omit(na.trim(ndf))[,1])<3){stop("Too Little Info. One or more Indicators are sparse in data, re-do selection.")}
#plot(na.approx(ndf[,2]))
mdata=cor(na.approx(ndf[,2:length(names)],na.rm=F),use = "pairwise.complete.obs")
#mdata=cor(as.data.frame(ndf[,1:length(names(ndf))]))
plotcorrInternal <- function() {
if (i == j && !diag)
return()
if (!numbers) {
mat[1, 2] <- mdata[i, j]
mat[2, 1] <- mat[1, 2]
ell <- ellipse(mat, t = 0.43)
ell[, 1] <- ell[, 1] + j
ell[, 2] <- ell[, 2] + length(rows) + 1 - i
polygon(ell, col = col[i, j])
if (outline)
lines(ell)
}
else {
text(j + 0.3, length(rows) + 1 - i ,
round(100 * mdata[i, j], 0), adj=c(.5,.5),cex = .9,col=colorsnum[5*mdata[i,j] + 6])
}
}
colors = c("#08519C","#3182BD","#6BAED6","#BDD7E7","#EFF3FF","white","#FEE5D9","#FCAE91","#FB6A4A","#DE2D26","#A50F15")
colorsnum = c("#08519C","#3182BD","#6BAED6","#BDD7E7","#CCD2E5","#E4E2B7","#D4BEB4","#FCAE91","#FB6A4A","#DE2D26","#A50F15")
savepar <- par(pty = "m", mar=c(0,0,1,0),oma=c(0,0,1,0))
on.exit(par(savepar))
plot.new()
par(new = TRUE)
rowdim <- dim(mdata)[1]
coldim <- dim(mdata)[2]
rowlabs <- dimnames(mdata)[[1]]
collabs <- dimnames(mdata)[[2]]
if (is.null(rowlabs))
rowlabs <- 1:rowdim
if (is.null(collabs))
collabs <- 1:coldim
rowlabs <- as.character(rowlabs)
collabs <- as.character(collabs)
col=colors[5*mdata + 6]
col <- rep(col, length = length(mdata))
dim(col) <- dim(mdata)
cols <- 1:coldim
rows <- 1:rowdim
maxdim <- max(length(rows), length(cols))
plt <- par("plt")
xlabwidth <- max(strwidth(rowlabs[rows], units = "figure",cex = .1))/(plt[2] - plt[1])
xlabwidth <- xlabwidth * maxdim/(1 - xlabwidth)
ylabwidth <- max(strwidth(collabs[cols], units = "figure",cex = .1))/(plt[4] - plt[3])
ylabwidth <- ylabwidth * maxdim/(1 - ylabwidth)
plot(c(-xlabwidth - 0.5, maxdim + 0.5), c(0, maxdim + 1.5 +
ylabwidth), type = "n", bty = "n", axes = F, xlab = "",
ylab = "", asp = 1, cex.lab = .5)
#title(titl,cex.main = 1)
title("")
text(rep(0, length(rows)), length(rows):1, labels = rowlabs[rows],
adj = 1, cex = .8)
text(cols, rep(length(rows) + 1, length(cols)),
labels = collabs[cols], srt = 25, adj = 0, cex = .7)
mat <- diag(c(1, 1))
diag=F
numbers=F
outline=T
for (i in 1:dim(mdata)[1]) {
for (j in 1:dim(mdata)[2]) {
if ((i >= j)) {
numbers=F
plotcorrInternal()
}
else if ((i <= j)) {
numbers=T
plotcorrInternal()
}
}
}
}
#dataFrame=te.get.hist.multi.free(c,country,indicator,date)
#te.plot.multi(c,c("United States:Unemployment Rate","United States:Inflation Rate"),date="2005")
#te.plot.compare(c("r@tradingeconomics.com","Lisboa!1"),countries,indicators)
#c=set.auth("r@tradingeconomics.com","Lisboa!1")
#te.plot.compare(c,EUROPE[20:length(EUROPE)],indicators)
#te.plot.compare.scale(c,EUROPE[1:20],"unemployment rate")
#dataFrame=te.get.hist.multi.free(c,EUROPE,"unemployment rate",d1="last")
#te.plot.multi(c,reqArray)
#te.plot(c,"united states","unemployment rate")
#te.countries(c,"G20")
#te.geomap(c,"inflation rate")
#EUROPE=
#AFRICA=
#G20=
#AMERICAS=
#ASIA=
indicators=c("gdp annual growth rate","inflation rate")
countries=c("portugal","greece","spain","united states","united kingdom","japan")
panel.cor=function(x, y, digits=2, prefix="", cex.cor){
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y,use="pairwise.complete.obs")
test <- cor.test(x,y,use="pairwise.complete.obs")
# borrowed from printCoefmat
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
symbols = c("****", "***", "**", "*", " "))
text(0.5, 0.5, round(100*r),cex=3)
text(.8, .85, Signif,col=2)
}
te.simplecorrelation.matrix=function(c,country,indicator,d1="NULL",opts=NULL){
options(stringsAsFactors = FALSE)
#df=te.get.hist.multi.free(c,country,indicator,d1="2012")
df=te.get.hist.multi.free.new(country,indicator,d1="2007-12-01")
if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
for(rows in 1:dim(df)[1])
df$Category[rows] <- paste(substr(strsplit(df$Category[rows]," ")[[1]],1,5),collapse=" ")
df$Country[!is.na(countrycode(df$Country,"country.name","iso3c"))] <- countrycode(df$Country,"country.name","iso3c")[!is.na(countrycode(df$Country,"country.name","iso3c"))]
df$Country[tolower(df$Country)=="euro area"] <- "EA17"
if(length(country)==1){
titl=paste(country,"Indicators",sep=" - ")
df$Indicator <- sapply(df, function(x) paste(df$Category,sep=""))[,1]
}else if(length(indicator)==1){
titl=paste(indicator)
df$Indicator <- sapply(df, function(x) paste(substr(df$Country,1,4),sep=""))[,1]
}else{
titl="TODO"
df$Indicator <- sapply(df, function(x) paste(substr(df$Country,1,4),df$Category,sep=" - "))[,1]
}
df$DateTime <- as.yearmon(df$DateTime)
#df$DateTime <- as.yearqtr(df$DateTime)
ndf = cast(df,DateTime ~ Indicator,value = "Close",fun.aggregate="mean")
for(cols in 2:dim(ndf)[2]){ndf[!complete.cases(ndf[cols]),cols]<-NA; ndf[[cols]]<-na.approx(zoo(ndf[[cols]],as.yearmon(ndf[[1]],"%b%y")),na.rm=F)}
#ndf
names=names(ndf)
if(length(na.omit(na.trim(ndf))[,1])<3){stop("Too Little Info. One or more Indicators are sparse in data, re-do selection.")}
ndf=as.data.frame(na.omit(na.approx(na.trim(ndf[,2:length(names(ndf))]))))
names(ndf)=names[2:length(names)]
pairs(as.data.frame(ndf[,1:length(names(ndf))]),
lower.panel=panel.smooth, upper.panel=panel.cor,gap=0.1,
cex=.1,cex.labels=1.2,main="")
}
#historical.matrix = function(c,countries,indicators,d1="2005"){
#  options(stringsAsFactors = FALSE)
#  newdf=data.frame()
#  df=data.frame()
#  myTempDF=data.frame()
#  df=te.get.hist.multi.free(c,countries,indicators,d1)
#  for(i in 1:length(countries))
#  {
#    #print(i)
#    myTempDF=cbind(data.frame(t(df[tolower(df$Country)==tolower(countries[i]),c('Category','Value')])),countries[i])
#    if(length(myTempDF)<length(indicators)+1){next}
#    names(myTempDF)=c(myTempDF['Category',1:length(indicators)],'Country')
#    newdf=rbind(newdf,myTempDF['Value',])
#  }
#  #return(list(message=paste(names(newdf),collapse=" # ")))
#
#  newdf[,1:length(indicators)]<-lapply(newdf[,1:length(indicators)],as.numeric)
#  #return(list(message=paste(paste(df,collapse=" J "),paste(newdf,collapse=" H "),collapse=" ! ")))
#  newdf
#}
if(F){
#BUBBLE PLOT
df=data.frame()
assign("df",historicalToMatrix(c,country,indicator), envir = environment())
if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
df$Country[!is.na(countrycode(df$Country,"country.name","iso3c"))] <- countrycode(df$Country,"country.name","iso3c")[!is.na(countrycode(df$Country,"country.name","iso3c"))]
df$Country[tolower(df$Country)=="euro area"] <- "RA17"
titl=paste(indicator[2], indicator[3],sep=" ~ ")
ggplot(df, aes(x=get(names(df)[2]), y=get(names(df)[3]), size=get(names(df)[1]), label=Country),legend=FALSE)+
geom_point(colour="white", fill="red", shape=21) + scale_size_area(max_size = 25)+
scale_x_continuous(indicator[2],limits=c(min(df[,2]), max(df[,2])))+
scale_y_continuous(indicator[3],limits=c(min(df[,3]), max(df[,3])))+
geom_text(size=4, hjust=0, vjust=0)+
ggtitle(titl)
}
country = "Germany"
indicator=c("Unemployment Rate", "Long Term Unemployment Rate", "Youth Unemployment Rate")
indicator
df=te.get.mat.new(country,indicator[1])}else{df=te.get.mat.new(country,indicator)}
if(length(country)>1 && length(indicator)>1){
df=te.get.mat.new(country,indicator[1])}else{df=te.get.mat.new(country,indicator)}
df <- df[c("Country","Category","DateTime","Value","Unit")]
if(length(unique(country))>1 && length(indicator)>1){
df=te.get.mat.new(country,indicator[1])}else{df=te.get.mat.new(country,indicator)}
df <- df[c("Country","Category","DateTime","Value","Unit")]
df
te.pie.chart=function(c,country,indicator,d1="NULL",opts=NULL){
options(stringsAsFactors = FALSE)
#df=te.get.hist.multi.free(c,country,indicator,"last")
if(length(unique(country))>1 && length(indicator)>1){
df=te.get.mat.new(country,indicator[1])}else{df=te.get.mat.new(country,indicator)}
df <- df[c("Country","Category","DateTime","Value","Unit")]
if(is.null(df)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(df)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(unique(df$Category))==1) df = te.unit.converter(df)
for(rows in 1:dim(df)[1])
df$Category[rows] <- paste(substr(strsplit(df$Category[rows]," ")[[1]],1,5),collapse=" ")
df$Country[!is.na(countrycode(df$Country,"country.name","iso3c"))] <- countrycode(df$Country,"country.name","iso3c")[!is.na(countrycode(df$Country,"country.name","iso3c"))]
df$Country[tolower(df$Country)=="euro area"] <- "EA17"
df$Country[df$Value<0] <- paste("(-)",df$Country[df$Value<0],sep="")
df$Value <- abs(df$Value)
df$Value <- df$Value/sum(df$Value)
df$p <- cumsum(df$Value)-diff(c(0,cumsum(df$Value)))*(1-0.5)
df$Indicator <- df$Country
if(length(unique(df$Country))==1) df$Indicator <- df$Category
ggplot(data=df, aes(x=factor(1),y=Value, fill=factor(Indicator), weight=Value))+
geom_bar(width=1,stat="identity",colour="black") +
coord_polar(theta="y")  +
geom_text(aes(x=1.5,y=p, angle=-p*360,label=Indicator,vjust=0)) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.title.y= element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.ticks=element_blank(),
legend.position = "none")
#+ ggtitle(indicator)
}
country
indicator
te.pie.chart(1,country,indicator)
country
indicator
country=c("Germany","France")
country
indicator
options(stringsAsFactors = FALSE)
position=ifelse(!is.null(opts),ifelse(!opts,"none","right"),"right")
if(is.null(indicator))
{
titl="Multiple Plot"
axis=element_blank()
#dataFrame=te.get.hist.multi(c,country,d1)
dataFrame=te.get.hist.multi.new(country,d1)
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame$Close)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
for(rows in 1:dim(dataFrame)[1])
dataFrame$Category[rows] <- paste(substr(strsplit(dataFrame$Category[rows]," ")[[1]],1,5),collapse=" ")
dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EA17"
dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
for(ca in unique(dataFrame$Indicator))
#dataFrame[dataFrame$Indicator==ca,]$Value=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Value))
dataFrame[dataFrame$Indicator==ca,]$Close=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Close))
}else if(length(country)==1){
titl=paste(country)
axis=element_blank()
#dataFrame=te.get.hist.multi.free(c,country,indicator,d1)
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame$Close)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
for(rows in 1:dim(dataFrame)[1])
dataFrame$Category[rows] <- paste(substr(strsplit(dataFrame$Category[rows]," ")[[1]],1,5),collapse=" ")
dataFrame$Indicator <- sapply(dataFrame, function(x) dataFrame$Category)[,1]
for(ca in unique(dataFrame$Indicator))
#dataFrame[dataFrame$Indicator==ca,]$Value=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Value))
dataFrame[dataFrame$Indicator==ca,]$Close=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Close))
}else if(length(indicator)==1){
titl=paste(indicator)
axis=element_text()
#dataFrame=te.get.hist.multi.free(c,country,indicator,d1)
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame$Close)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
#dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
#dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EA17"
#dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
dataFrame$Indicator <- dataFrame$Country
if(indicator %in% comparisonproblems){
axis=element_blank()
for(ca in unique(dataFrame$Indicator))
#dataFrame[dataFrame$Indicator==ca,]$Value=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Value))
dataFrame[dataFrame$Indicator==ca,]$Close=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Close))
}
}else{
titl=paste("Cross-Indicators Analysis")
axis=element_blank()
#dataFrame=te.get.hist.multi.free(c,country,indicator,d1)
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
for(rows in 1:dim(dataFrame)[1])
dataFrame$Category[rows] <- paste(substr(strsplit(dataFrame$Category[rows]," ")[[1]],1,5),collapse=" ")
dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EA17"
dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
for(ca in unique(dataFrame$Indicator))
#dataFrame[dataFrame$Indicator==ca,]$Value=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Value))
dataFrame[dataFrame$Indicator==ca,]$Close=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Close))
}
labelsbreak=paste(round(as.numeric(max(dataFrame$DateTime)-min(dataFrame$DateTime), units = "days")/300),"month")
#ggplot(dataFrame,aes(x=DateTime, y=Value, colour=Indicator)) +
ggplot(dataFrame,aes(x=DateTime, y=Close, colour=Indicator)) +
geom_line() +
#geom_point(size = 3) +
#scale_colour_manual(values = c("7.4" = "red","#4863A0")) +
#scale_x_date(breaks = labelsbreak,labels=date_format("%m/%y")) +
#scale_y_continuous(breaks = round(seq(min(dataFrame$Value), max(dataFrame$Value), by = round((max(dataFrame$Value)-min(dataFrame$Value))/6,1)),1)) +
xlab("") + ylab("") +
theme(axis.text.y = axis,
panel.border=element_blank(),
axis.line=element_line(colour = "grey",size=.3),
panel.background = element_blank(),
panel.grid.minor = element_line(colour = "grey",size=.2),
panel.grid.major = element_line(colour = "grey",size=.3)) +
theme(legend.position=position)
titl=paste("Cross-Indicators Analysis")
axis=element_blank()
#dataFrame=te.get.hist.multi.free(c,country,indicator,d1)
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
d1="2005"
dataFrame=te.get.hist.multi.free.new(country,indicator,d1)
dataFrame
if(is.null(dataFrame)){stop("Return to Sender: No Such Country - Indicator Pair.")}
if(length(dataFrame)<2){stop("Return to Sender: No Such Country - Indicator Pair.")}
for(rows in 1:dim(dataFrame)[1])
dataFrame$Category[rows] <- paste(substr(strsplit(dataFrame$Category[rows]," ")[[1]],1,5),collapse=" ")
dataFrame$Country[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))] <- countrycode(dataFrame$Country,"country.name","iso3c")[!is.na(countrycode(dataFrame$Country,"country.name","iso3c"))]
dataFrame$Country[tolower(dataFrame$Country)=="euro area"] <- "EA17"
dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=" - "))[,1]
for(ca in unique(dataFrame$Indicator))
#dataFrame[dataFrame$Indicator==ca,]$Value=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Value))
dataFrame[dataFrame$Indicator==ca,]$Close=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Close))
}
labelsbreak=paste(round(as.numeric(max(dataFrame$DateTime)-min(dataFrame$DateTime), units = "days")/300),"month")
#ggplot(dataFrame,aes(x=DateTime, y=Value, colour=Indicator)) +
ggplot(dataFrame,aes(x=DateTime, y=Close, colour=Indicator)) +
geom_line() +
#scale_colour_manual(values = c("7.4" = "red","#4863A0")) +
#scale_x_date(breaks = labelsbreak,labels=date_format("%m/%y")) +
#geom_point(size = 3) +
#scale_y_continuous(breaks = round(seq(min(dataFrame$Value), max(dataFrame$Value), by = round((max(dataFrame$Value)-min(dataFrame$Value))/6,1)),1)) +
xlab("") + ylab("") +
theme(axis.text.y = axis,
panel.border=element_blank(),
axis.line=element_line(colour = "grey",size=.3),
panel.background = element_blank(),
panel.grid.minor = element_line(colour = "grey",size=.2),
panel.grid.major = element_line(colour = "grey",size=.3)) +
theme(legend.position=position)
position"none"
position="none"
ggplot(dataFrame,aes(x=DateTime, y=Close, colour=Indicator)) +
geom_line() +
#geom_point(size = 3) +
#scale_colour_manual(values = c("7.4" = "red","#4863A0")) +
#scale_x_date(breaks = labelsbreak,labels=date_format("%m/%y")) +
#scale_y_continuous(breaks = round(seq(min(dataFrame$Value), max(dataFrame$Value), by = round((max(dataFrame$Value)-min(dataFrame$Value))/6,1)),1)) +
xlab("") + ylab("") +
theme(axis.text.y = axis,
panel.border=element_blank(),
axis.line=element_line(colour = "grey",size=.3),
panel.background = element_blank(),
panel.grid.minor = element_line(colour = "grey",size=.2),
panel.grid.major = element_line(colour = "grey",size=.3)) +
theme(legend.position=position)
p1= ggplot(dataFrame,aes(x=DateTime, y=Close, colour=Indicator)) +
geom_line() +
#geom_point(size = 3) +
#scale_colour_manual(values = c("7.4" = "red","#4863A0")) +
#scale_x_date(breaks = labelsbreak,labels=date_format("%m/%y")) +
#scale_y_continuous(breaks = round(seq(min(dataFrame$Value), max(dataFrame$Value), by = round((max(dataFrame$Value)-min(dataFrame$Value))/6,1)),1)) +
xlab("") + ylab("") +
theme(axis.text.y = axis,
panel.border=element_blank(),
axis.line=element_line(colour = "grey",size=.3),
panel.background = element_blank(),
panel.grid.minor = element_line(colour = "grey",size=.2),
panel.grid.major = element_line(colour = "grey",size=.3)) +
theme(legend.position=position)
p2= ggplot(dataFrame,aes(x=DateTime, y=Close, colour=Indicator)) +
geom_line() +
#geom_point(size = 3) +
#scale_colour_manual(values = c("7.4" = "red","#4863A0")) +
#scale_x_date(breaks = labelsbreak,labels=date_format("%m/%y")) +
#scale_y_continuous(breaks = round(seq(min(dataFrame$Value), max(dataFrame$Value), by = round((max(dataFrame$Value)-min(dataFrame$Value))/6,1)),1)) +
xlab("") + ylab("") +
theme(axis.text.y = axis,
panel.border=element_blank(),
axis.line=element_line(colour = "grey",size=.3),
panel.background = element_blank(),
panel.grid.minor = element_line(colour = "grey",size=.2),
panel.grid.major = element_line(colour = "grey",size=.3)) +
theme(legend.position=position)
arrange_ggplot2(p1,p2,ncol=1)
## Function for arranging ggplots. use png(); arrange(p1, p2, ncol=1); dev.off() to save.
require(grid)
vp.layout <- function(x, y) viewport(layout.pos.row=x, layout.pos.col=y)
arrange_ggplot2 <- function(..., nrow=NULL, ncol=NULL, as.table=FALSE) {
dots <- list(...)
n <- length(dots)
if(is.null(nrow) & is.null(ncol)) { nrow = floor(n/2) ; ncol = ceiling(n/nrow)}
if(is.null(nrow)) { nrow = ceiling(n/ncol)}
if(is.null(ncol)) { ncol = ceiling(n/nrow)}
## NOTE see n2mfrow in grDevices for possible alternative
grid.newpage()
pushViewport(viewport(layout=grid.layout(nrow,ncol) ) )
ii.p <- 1
for(ii.row in seq(1, nrow)){
ii.table.row <- ii.row
if(as.table) {ii.table.row <- nrow - ii.table.row + 1}
for(ii.col in seq(1, ncol)){
ii.table <- ii.p
if(ii.p > n) break
print(dots[[ii.table]], vp=vp.layout(ii.table.row, ii.col))
ii.p <- ii.p + 1
}
}
}
arrange_ggplot2(p1,p2,ncol=1)
position="right"
pl1 = te.plot.multi(1,country,indicator[1])
pl2 = te.plot.multi(1,country,indicator[2])
pl3 = te.plot.multi(1,country,indicator[3])
arrange_ggplot2(pl1,pl2,pl3,ncol=1)
