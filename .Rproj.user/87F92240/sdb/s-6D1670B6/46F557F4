{
    "contents" : "if(F){\n  if (!require(zoo)){ \n  install.packages(\"zoo\",repos=\"http://cran.us.r-project.org\")\n  require(zoo, quietly = T) \n}\nif (!require(ggplot2)){ \n  install.packages(\"ggplot2\",repos=\"http://cran.us.r-project.org\")\n  require(ggplot2, quietly = T) \n} \nif (!require(countrycode)){ \n  install.packages(\"countrycode\",repos=\"http://cran.us.r-project.org\")\n  require(countrycode, quietly = T) \n} \nif (!require(RJSONIO)){ \n  install.packages(\"RJSONIO\",repos=\"http://cran.us.r-project.org\")\n  require(RJSONIO, quietly = T) \n}\nif (!require(rworldmap)){ \n  install.packages(\"rworldmap\",repos=\"http://cran.us.r-project.org\")\n  require(rworldmap, quietly = T) \n} \nif (!require(reshape)){ \n  install.packages(\"reshape\",repos=\"http://cran.us.r-project.org\")\n  require(reshape, quietly = T) \n} \nif (!require(mapproj)){ \n  install.packages(\"mapproj\",repos=\"http://cran.us.r-project.org\")\n  require(mapproj, quietly = T) \n} \nif (!require(plyr)){ \n  install.packages(\"plyr\",repos=\"http://cran.us.r-project.org\")\n  require(plyr, quietly = T) \n} \n#library(plyr)\nrequire(scales)\nlibrary(ellipse)\n#library(treemap)\n}\nlibrary(countrycode)\nis.formula<-plyr::is.formula\nrbind.fill<-plyr::rbind.fill\noptions(stringsAsFactors = FALSE)\n\n#all <- map_data(\"world\")\n#all$region[!is.na(countrycode(all$region,\"country.name\",\"iso3c\"))] <- countrycode(all$region,\"country.name\",\"iso3c\")[!is.na(countrycode(all$region,\"country.name\",\"iso3c\"))]\ncountrycode_data=countrycode_data;\n\ncomparisonproblems=c(\"Balance of Trade\",\"Business Confidence\",\"Consumer Confidence\",\"Current Account\",\"Exports\",\"Imports\",\"Consumer Price Index (CPI)\",\"Consumer Spending\",\"Core Consumer Prices\",\"Currency\",\"Exchange Rate\",\"External Debt\",\"Foreign Bond Investment\",\"Foreign Direct Investment\",\"Harmonised Consumer Prices\",\"Household Spending\",\"Housing Index\",\"Stock Market\")\n#d=te.countries(c,\"G200\")\n#nr<-countrycode(d,\"country.name\",\"iso3c\")\n\n#unique((all[c('region','nr')])[order(all$region),])\n#as.data.frame(cbind(d,nr))\n#EUROPE=c(\"Albania\",\"Andorra\",\"Austria\",\"Belarus\",\"Belgium\",\"Bosnia and Herzegovina\",\"Bulgaria\",\"Channel Islands\",\"Croatia\",\"Cyprus\",\"Czech Republic\",\"Denmark\",\"Estonia\",\"Euro area\",\"Faeroe Islands\",\"Finland\",\"France\",\"Germany\",\"Greece\",\"Hungary\",\"Iceland\",\"Ireland\",\"Isle of Man\",\"Italy\",\"Kosovo\",\"Latvia\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Macedonia\",\"Malta\",\"Moldova\",\"Monaco\",\"Montenegro\",\"Netherlands\",\"Norway\",\"Poland\",\"Portugal\",\"Romania\",\"Russia\",\"San Marino\",\"Serbia\",\"Slovakia\",\"Slovenia\",\"Spain\",\"Sweden\",\"Switzerland\",\"Turkey\",\"Ukraine\",\"United Kingdom\")\n\nset.auth=function(u=\"guest\",p=\"guest\"){\n  c(u,p)\n}\nte.connect=function(c){\n  a = 'http://api.tradingeconomics.com/data.aspx';\n  paste(a,'?u=',c[1],'&p=',c[2],'&f=csv',sep='');\n}\nte.get.mat=function(c){\n  url = paste(te.connect(c), '&q=matrix', sep=''); #print(url);\n  read.csv(url)\n}\nte.get.hist=function(c,country,indicator,d1=\"2005\"){\n  head=FALSE\n  if(tolower(d1)==\"last\"){d1=\"2009\";head=TRUE}\n  url = paste(te.connect(c), \"&\",\"d1=\",d1,\"&q=historical&c=\",URLencode(country),\"&i=\",URLencode(indicator),sep=\"\"); #print(url);\n  df = read.csv(url)\n  if(is.null(df$DateTime)){return (NULL)}\n  df$DateTime=as.Date(df$DateTime,\"%m/%d/%Y\")\n  if(head){df=df[order(df$DateTime,decreasing=TRUE),][1,]}\n  df\n}\n#reqArray = c(\"Country:indicator\",\"country:indicator\", ... )\nte.get.hist.multi=function(c,reqArray,d1=\"2005\"){\n  dataFrame=data.frame()\n  for(i in 1:length(reqArray)){\n  dataFrame=rbind(dataFrame,te.get.hist(c,strsplit(reqArray[i],\":\")[[1]][1],strsplit(reqArray[i],\":\")[[1]][2],d1))\n}\n  dataFrame\n}\n#contArray = c(\"Country\",\"country\", ... ) | indArray = c(\"indicator\",\"indicator\", ... )\nte.get.hist.multi.free=function(c,contArray,indArray,d1=\"2005\"){\n  dataFrame=data.frame()\n  temp=data.frame()\n  for(i in 1:length(contArray)){\n    for(j in 1:length(indArray)){\n    temp=te.get.hist(c,contArray[i],indArray[j],d1)\n    if(is.null(temp)){next}\n    dataFrame=rbind(dataFrame,temp)\n    }\n  }\n  dataFrame\n}\nte.get.hist.multi.free.na=function(c,contArray,indArray,d1=\"2005\"){\n  options(stringsAsFactors = FALSE)\n  dataFrame=data.frame()\n  temp=data.frame()\n  for(i in 1:length(contArray)){\n    for(j in 1:length(indArray)){\n      temp=te.get.hist(c,contArray[i],indArray[j],d1)\n      if(is.null(temp)){temp = as.data.frame(t(c(contArray[i],indArray[j],NA,NA)));names(temp)=c(\"Country\",\"Category\",\"DateTime\",\"Value\")}\n      dataFrame=rbind(dataFrame,temp)\n    }\n  }\n  dataFrame\n}\nte.plot=function(c,country,indicator,d1=\"2005\",opts=NULL){\n  dataFrame=te.get.hist(c,country,indicator,d1)\n  if(is.null(dataFrame)){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  if(length(dataFrame)<2){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  labelsbreak=paste(round(as.numeric(dataFrame$DateTime[length(dataFrame$DateTime)]-dataFrame$DateTime[1], units = \"days\")/300),\"month\")\n  \n  #while(round((max(dataFrame$Value)-min(dataFrame$Value))/10,1)==0)\n  #{    dataFrame$Value <- dataFrame$Value*100  }\n  ggplot(dataFrame, aes(x=DateTime, y=Value)) + \n    geom_line(colour=\"#4863A0\",size = 1, aes(group = 1)) + \n    #geom_point(size = 3) +\n    #scale_colour_manual(values = c(\"7.4\" = \"red\",\"#4863A0\")) +\n    #scale_x_date(breaks = labelsbreak,labels=date_format(\"%m/%y\")) + \n    #scale_y_continuous(breaks = round(seq(min(dataFrame$Value), max(dataFrame$Value), by = round((max(dataFrame$Value)-min(dataFrame$Value))/6,1)),1)) +\n    xlab(\"\") + \n    #ylab(dataFrame$Category[1]) + \n    ylab(\"\") + \n    ggtitle(paste( dataFrame$Country[1] ,\"-\", dataFrame$Category[1])) + \n    theme(\n        #plot.title = element_text(face=\"bold\"), \n        plot.title = element_blank(), \n        panel.border=element_blank(),\n        axis.line=element_line(colour = \"grey\",size=.3),\n        panel.background = element_blank(),\n        panel.grid.minor = element_line(colour = \"grey\",size=.2),\n        panel.grid.major = element_line(colour = \"grey\",size=.3))\n  #+ geom_hline(yintercept  = mean(dataFrame$Value))\n}\n#reqArray=c(\"Portugal:Unemployment Rate\",\"Greece:Unemployment Rate\",\"Spain:Unemployment Rate\")\nte.plot.multi=function(c,country,indicator=NULL,d1=\"2005\",opts=NULL){\noptions(stringsAsFactors = FALSE)\nif(is.null(indicator))\n{\n  titl=\"Multiple Plot\"\n  axis=element_blank()\n  dataFrame=te.get.hist.multi(c,country,d1)\n  \n  if(is.null(dataFrame)){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  if(length(dataFrame)<2){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  \n  dataFrame$Country[!is.na(countrycode(dataFrame$Country,\"country.name\",\"iso3c\"))] <- countrycode(dataFrame$Country,\"country.name\",\"iso3c\")[!is.na(countrycode(dataFrame$Country,\"country.name\",\"iso3c\"))]\n  dataFrame$Country[tolower(dataFrame$Country)==\"euro area\"] <- \"EA17\"\n  dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=\" - \"))[,1] \n  for(ca in unique(dataFrame$Indicator))\n    dataFrame[dataFrame$Indicator==ca,]$Value=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Value))\n}else if(length(country)==1){\n  titl=paste(country)\n  axis=element_blank()\n  dataFrame=te.get.hist.multi.free(c,country,indicator,d1)\n  \n  if(is.null(dataFrame)){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  if(length(dataFrame)<2){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  \n  dataFrame$Indicator <- sapply(dataFrame, function(x) dataFrame$Category)[,1] \n  for(ca in unique(dataFrame$Indicator))\n    dataFrame[dataFrame$Indicator==ca,]$Value=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Value))\n}else if(length(indicator)==1){\n  titl=paste(indicator)\n  axis=element_text()\n  dataFrame=te.get.hist.multi.free(c,country,indicator,d1)\n      \n if(is.null(dataFrame)){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n if(length(dataFrame)<2){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n      \n #dataFrame$Country[!is.na(countrycode(dataFrame$Country,\"country.name\",\"iso3c\"))] <- countrycode(dataFrame$Country,\"country.name\",\"iso3c\")[!is.na(countrycode(dataFrame$Country,\"country.name\",\"iso3c\"))]\n #dataFrame$Country[tolower(dataFrame$Country)==\"euro area\"] <- \"EA17\"\n #dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=\" - \"))[,1] \n dataFrame$Indicator <- dataFrame$Country \n \n if(indicator %in% comparisonproblems){\n   axis=element_blank()\n for(ca in unique(dataFrame$Indicator))\n     dataFrame[dataFrame$Indicator==ca,]$Value=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Value))\n }\n}else{\n  titl=paste(\"Cross-Indicators Analysis\")\n  axis=element_blank()\n  dataFrame=te.get.hist.multi.free(c,country,indicator,d1)\n  if(is.null(dataFrame)){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  if(length(dataFrame)<2){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  \n  dataFrame$Country[!is.na(countrycode(dataFrame$Country,\"country.name\",\"iso3c\"))] <- countrycode(dataFrame$Country,\"country.name\",\"iso3c\")[!is.na(countrycode(dataFrame$Country,\"country.name\",\"iso3c\"))]\n  dataFrame$Country[tolower(dataFrame$Country)==\"euro area\"] <- \"EA17\"\n  dataFrame$Indicator <- sapply(dataFrame, function(x) paste(substr(dataFrame$Country,1,4),dataFrame$Category,sep=\" - \"))[,1] \n  \n  for(ca in unique(dataFrame$Indicator))\n    dataFrame[dataFrame$Indicator==ca,]$Value=as.numeric(scale(dataFrame[dataFrame$Indicator==ca,]$Value))\n}\n\n  labelsbreak=paste(round(as.numeric(max(dataFrame$DateTime)-min(dataFrame$DateTime), units = \"days\")/300),\"month\")\n  ggplot(dataFrame,aes(x=DateTime, y=Value, colour=Indicator)) + \n    geom_line() + \n    #geom_point(size = 3) +\n    #scale_colour_manual(values = c(\"7.4\" = \"red\",\"#4863A0\")) +\n    #scale_x_date(breaks = labelsbreak,labels=date_format(\"%m/%y\")) + \n    #scale_y_continuous(breaks = round(seq(min(dataFrame$Value), max(dataFrame$Value), by = round((max(dataFrame$Value)-min(dataFrame$Value))/6,1)),1)) +\n    xlab(\"\") + ylab(\"\") +\n    theme(axis.text.y = axis, \n          panel.border=element_blank(),\n          axis.line=element_line(colour = \"grey\",size=.3),\n          panel.background = element_blank(),\n          panel.grid.minor = element_line(colour = \"grey\",size=.2),\n          panel.grid.major = element_line(colour = \"grey\",size=.3)) \n    #+ ggtitle(titl) \n    #ylab(dataFrame$Category[1]) + \n    #ggtitle(paste( dataFrame$Country[1] ,\"-\", dataFrame$Category[1])) + \n    #theme(plot.title = element_text(face=\"bold\"))\n}\nte.plot.compare.scale=function(c,country,indicator,d1=NULL,opts=NULL){\n  if(length(country)>70){stop(\"Too many indicators to show. Please re-do selection.\")}\n  d=te.get.hist.multi.free(c,country,indicator,\"last\")\n  if(is.null(d)){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  if(length(d)<2){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  titl = paste(indicator)\n  d <- within(d,{Country <- reorder(Country,Value)})\n  #d$Country <- countrycode(d$Country,\"country.name\",\"iso3c\")\n  qplot(Value, Country, data=d) +\n    facet_grid(Category ~ ., scales = \"free\", space = \"free\") + \n    theme(axis.text.y=element_text(color=\"black\"),\n          strip.text.y = element_text(size=9),\n          strip.background = element_rect(fill=\"#4775FF\"),\n           panel.background = element_rect(fill=\"#F7FAFC\"),\n         # panel.background = element_blank(),\n         # panel.border=element_rect(fill=NA,colour=\"black\"),\n          panel.grid.major=element_line(colour=\"grey\"),\n          legend.position = \"none\") +\n    geom_point(size = 7, shape=22, colour=\"black\", aes(fill = Value)) + scale_fill_gradient(high = \"red\",low=\"black\") +\n    xlab(\"\") + ylab(\"\") \n  #+ ggtitle(titl)\n}\nte.plot.compare=function(c,country,indicator,d1=\"NULL\",opts=NULL){\n  df=data.frame()\n  assign(\"df\",historicalToMatrix(c,country,indicator), envir = environment())\n  if(is.null(df)){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  if(length(df)<2){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  df$Country[!is.na(countrycode(df$Country,\"country.name\",\"iso3c\"))] <- countrycode(df$Country,\"country.name\",\"iso3c\")[!is.na(countrycode(df$Country,\"country.name\",\"iso3c\"))]\n  df$Country[tolower(df$Country)==\"euro area\"] <- \"EA17\"\n  titl=paste(indicator[1], indicator[2],sep=\" ~ \")\n  ggplot(df, aes(get(names(df)[1]), get(names(df)[2])),environment=environment()) + \n    geom_point(shape=22,fill=\"black\") +\n    # geom_point(aes(colour = get(names(df)[3]))) +\n    # scale_colour_gradient(high = \"red\") +\n    theme(panel.border=element_blank(),\n          axis.line=element_line(colour = \"grey\",size=.3),\n          panel.background = element_blank(),\n          panel.grid.minor = element_line(colour = \"grey\",size=.2),\n          panel.grid.major = element_line(colour = \"grey\",size=.3)) +\n    geom_text(fontface=3, label=df$Country, hjust=0, vjust=0) +\n    xlab(indicator[1]) + ylab(indicator[2]) +\n    geom_smooth(method = \"lm\", formula = y ~ poly(x, 1),se=F,colour=\"#08088A\") +\n    geom_smooth(method = \"lm\", formula = y ~ poly(x, 2),se=F,colour=\"#08088A\", size = .2) \n  #+ ggtitle(titl)\n}\n## ACCEPTS: G99 | Continent | EMERGING99 | PLUNGING99 ##\nte.countries = function(c,group=\"G20\"){\n  m = te.get.mat(c)\n  if(substr(tolower(group),1,1)==\"g\" && !is.na(as.numeric(substr(tolower(group),2,nchar(group)))))\n  {\n    return (trim(head(m[order(m$GDP, decreasing = TRUE),],n=as.numeric(substr(tolower(group),2,nchar(group))))$Country))\n  }\n  if(substr(tolower(group),1,6)==\"europe\")\n  {\n    n=10\n    if(!is.na(as.numeric(substr(group,7,nchar(group)))))\n    {\n      n=as.numeric(substr(group,7,nchar(group)))\n    }\n    return (trim(head((m[trim(m$Continent)==\"Europe\",])[order(m[trim(m$Continent)==\"Europe\",]$GDP, decreasing = TRUE),]$Country,n)))\n  }\n  if(substr(tolower(group),1,6)==\"africa\")\n  {\n    n=10\n    if(!is.na(as.numeric(substr(group,7,nchar(group)))))\n    {\n      n=as.numeric(substr(group,7,nchar(group)))\n    }\n    return (trim(head((m[trim(m$Continent)==\"Africa\",])[order(m[trim(m$Continent)==\"Africa\",]$GDP, decreasing = TRUE),]$Country,n)))\n  }\n  if(substr(tolower(group),1,4)==\"asia\")\n  {\n    n=10\n    if(!is.na(as.numeric(substr(group,5,nchar(group)))))\n    {\n      n=as.numeric(substr(group,5,nchar(group)))\n    }\n    return (trim(head((m[trim(m$Continent)==\"Asia\",])[order(m[trim(m$Continent)==\"Asia\",]$GDP, decreasing = TRUE),]$Country,n)))\n  }\n  if(substr(tolower(group),1,7)==\"america\")\n  {\n    n=10\n    if(!is.na(as.numeric(substr(group,8,nchar(group)))))\n    {\n      n=as.numeric(substr(group,8,nchar(group)))\n    }\n    return (trim(head((m[trim(m$Continent)==\"America\",])[order(m[trim(m$Continent)==\"America\",]$GDP, decreasing = TRUE),]$Country,n)))\n  }\n  if(substr(tolower(group),1,9)==\"australia\")\n  {\n    n=10\n    if(!is.na(as.numeric(substr(group,10,nchar(group)))))\n    {\n      n=as.numeric(substr(group,10,nchar(group)))\n    }\n    return (trim(head((m[trim(m$Continent)==\"Australia\",])[order(m[trim(m$Continent)==\"Australia\",]$GDP, decreasing = TRUE),]$Country,n)))\n  }\n  if(substr(tolower(group),1,8)==\"emerging\")\n  {\n    n=10\n    if(!is.na(as.numeric(substr(group,9,nchar(group)))))\n    {\n      n=as.numeric(substr(group,9,nchar(group)))\n    }\n    return (trim(head(m[order(m$GDP.Growth.YoY, decreasing = TRUE),],n)$Country))\n  }\n  if(substr(tolower(group),1,8)==\"plunging\")\n  {\n    n=10\n    if(!is.na(as.numeric(substr(group,9,nchar(group)))))\n    {\n      n=as.numeric(substr(group,9,nchar(group)))\n    }\n    return (trim(head(m[order(m$GDP.Growth.YoY, decreasing = FALSE),],n)$Country))  }\n}\nte.indicators = function(c,group=\"labour\"){\n  #m = te.get.mat(c)\nc(\"GDP Annual Growth Rate\",\n\"Inflation Rate\",\n\"Interest Rate\",\n\"Imports\",\n\"GDP\",\n\"GDP Growth Rate\",\n\"Non Farm Payrolls\",\n\"Unemployment Rate\",\n\"Business Confidence\",\n\"Consumer Confidence\",\n\"Industrial Production\",\n\"Retail Sales YoY\",\n\"Exports\")\n}\nhistoricalToMatrix = function(c,countries,indicators){\n  options(stringsAsFactors = FALSE)\n  newdf=data.frame()\n  df=data.frame()\n  myTempDF=data.frame()\n  df=te.get.hist.multi.free(c,countries,indicators,\"last\")\n  for(i in 1:length(countries))\n  {\n    #print(i)\n    myTempDF=cbind(data.frame(t(df[tolower(df$Country)==tolower(countries[i]),c('Category','Value')])),countries[i])\n    if(length(myTempDF)<length(indicators)+1){next}\n    names(myTempDF)=c(myTempDF['Category',1:length(indicators)],'Country')\n    newdf=rbind(newdf,myTempDF['Value',])\n  }\n  #return(list(message=paste(names(newdf),collapse=\" # \")))\n  \n  newdf[,1:length(indicators)]<-lapply(newdf[,1:length(indicators)],as.numeric)\n  #return(list(message=paste(paste(df,collapse=\" J \"),paste(newdf,collapse=\" H \"),collapse=\" ! \")))\n  newdf\n}\nhistorical.matrix = function(c,countries,indicators,d1=\"2005\"){\n  options(stringsAsFactors = FALSE)\n  newdf=data.frame()\n  df=data.frame()\n  myTempDF=data.frame()\n  df=te.get.hist.multi.free(c,countries,indicators,d1)\n  for(i in 1:length(countries))\n  {\n    #print(i)\n    myTempDF=cbind(data.frame(t(df[tolower(df$Country)==tolower(countries[i]),c('Category','Value')])),countries[i])\n    if(length(myTempDF)<length(indicators)+1){next}\n    names(myTempDF)=c(myTempDF['Category',1:length(indicators)],'Country')\n    newdf=rbind(newdf,myTempDF['Value',])\n  }\n  #return(list(message=paste(names(newdf),collapse=\" # \")))\n  \n  newdf[,1:length(indicators)]<-lapply(newdf[,1:length(indicators)],as.numeric)\n  #return(list(message=paste(paste(df,collapse=\" J \"),paste(newdf,collapse=\" H \"),collapse=\" ! \")))\n  newdf\n}\ntrim=function (x) gsub(\"^\\\\s+|\\\\s+$\", \"\", x)\nSplit=function(x) {sapply(strsplit(x,\" \"), paste, collapse=\".\")}\nte.geomap=function(c,country=\"NULL\",indicator,d1=\"\",opts=NULL){\n  if(is.null(opts)){opts=\"World\"}\n  if(opts==\"World\"){\n    ct=te.countries(c,\"G200\")\n  }else if(opts==\"Africa\"){\n    ct=te.countries(c,\"Africa200\")\n  }else if(opts==\"Europe\"){\n    ct=te.countries(c,\"Europe200\")\n  }else if(opts==\"Asia\"){\n    ct=te.countries(c,\"Asia200\")\n  }else{\n    ct=te.countries(c,\"G200\")\n  }\n  d=te.get.hist.multi.free.na(c,ct,indicator,\"last\")\n  \n  d$region[!is.na(countrycode(d$Country,\"country.name\",\"iso3c\"))] <- countrycode(d$Country,\"country.name\",\"iso3c\")[!is.na(countrycode(d$Country,\"country.name\",\"iso3c\"))]\n  d[is.na(countrycode(d$Country,\"country.name\",\"iso3c\")),]$region <- substr(d[is.na(countrycode(d$Country,\"country.name\",\"iso3c\")),]$Country,1,3)\n  d$region[d$Country==\"Congo\"] <- \"COD\"\n  d$Value <- as.numeric(d$Value)\n  \n  #cnames <-aggregate(cbind(long, lat) ~ region, data = all, FUN = function(x) mean(range(x)))\n  #cnames$angle <-0\n  #head(cnames)\n  \n  sPDF <- joinCountryData2Map(d,joinCode = \"ISO3\",nameJoinColumn=\"region\")[-which(getMap()$ADMIN==\"Antarctica\"),]\n  \n  par(mai=c(0,0,0,0),mar=c(0,0,1,0),oma=c(0,0,0,0),xaxs=\"i\",yaxs=\"i\")\n  colourPalette <- brewer.pal(20,\"YlOrRd\")\n  mapCountryData(sPDF, \n                 nameColumnToPlot=\"Value\", \n                 addLegend=FALSE,\n                 colourPalette=colourPalette,\n                 oceanCol=\"lightblue\",\n                 borderCol=\"black\",\n                 missingCountryCol=\"grey\",\n                 mapTitle=\"\", #paste(opts,indicator,sep=\" - \"),\n                 mapRegion=opts,\n                 numCats=30)\n  \n  \n  #ggplot(d, aes(map_id = region)) + \n  #  geom_map(aes(fill = Value),colour=\"grey10\", map = all) + \n  #  expand_limits(x = all$long, y = all$lat) +\n  #  scale_fill_gradient2(low=\"red\", high=muted(\"green\"),mid = \"#669900\", midpoint = (max(d$Value,na.rm=T)-min(d$Value,na.rm=T))/2) +\n  #  theme(legend.position = \"bottom\",\n  #        axis.ticks = element_blank(), \n  #        axis.title = element_blank(), \n  #        axis.text =  element_blank(),\n  #        panel.background = element_rect(fill='#D6E0FF')) +\n    #geom_text(cnames, aes(long, lat, label = region, angle=angle, map_id=NULL), size=2.5) + \n  #  guides(fill = guide_colorbar(barwidth = 10, barheight = 0.5)) \n}\nte.heat.map=function(c,country,indicator,d1=\"NULL\",opts=NULL){\n  library(scales)\n  library(plyr)\n  df=te.get.hist.multi.free(c,country,indicator,\"last\")\n  if(is.null(df)){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  if(length(df)<2){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  df <- ddply(df, .(Category), transform, rescale = rescale(Value))\n  ggplot(df, aes(Category, Country)) + \n    geom_tile(aes(fill = rescale),colour = \"white\") + \n    scale_fill_gradient2(low = \"steelblue\",high = \"red\",midpoint=.5) +\n    theme_grey(base_size = 9) + \n    labs(x = \"\",y = \"\") + \n    scale_x_discrete(expand = c(0, 0)) +\n    scale_y_discrete(expand = c(0, 0)) + \n    theme(legend.position = \"none\",axis.ticks = element_blank(), \n          axis.text.x = element_text(size = 15, angle = 310, hjust = 0, colour = \"black\"),\n          axis.text.y = element_text(size = 12, colour = \"#000052\"))\n  #+ ggtitle(\"Countries ~ Indicators\")\n  \n}\nte.tree.map=function(c,country,indicator,d1=\"NULL\",opts=NULL){\n  options(stringsAsFactors = FALSE)\n  \n  df=te.get.hist.multi.free(c,country,indicator,\"last\")\n  \n  if(is.null(df)){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  if(length(df)<2){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  \n  df$Country[!is.na(countrycode(df$Country,\"country.name\",\"iso3c\"))] <- countrycode(df$Country,\"country.name\",\"iso3c\")[!is.na(countrycode(df$Country,\"country.name\",\"iso3c\"))]\n  df$Country[tolower(df$Country)==\"euro area\"] <- \"EA17\"\n  \n  df$Country[df$Value<0] <- paste(\"(-)\",df$Country[df$Value<0],sep=\"\")\n  df$Value <- abs(df$Value)\n  treemap::treemap(df, \n                   index=c(\"Country\"), \n                   vSize=\"Value\", \n                   title=indicator,\n                   type=\"value\",\n                   vColor=\"Value\",\n                   palette=\"RdBu\",\n                   aspRatio=1,\n                   range=c(min(df$Value),max(df$Value)))\n}\n#te.tree.map(c,countries,\"GDP\")\nte.pie.chart=function(c,country,indicator,d1=\"NULL\",opts=NULL){\n  options(stringsAsFactors = FALSE)\n  df=te.get.hist.multi.free(c,country,indicator,\"last\")\n  \n  if(is.null(df)){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  if(length(df)<2){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  \n  df$Country[!is.na(countrycode(df$Country,\"country.name\",\"iso3c\"))] <- countrycode(df$Country,\"country.name\",\"iso3c\")[!is.na(countrycode(df$Country,\"country.name\",\"iso3c\"))]\n  df$Country[tolower(df$Country)==\"euro area\"] <- \"EA17\"\n  df$Country[df$Value<0] <- paste(\"(-)\",df$Country[df$Value<0],sep=\"\")\n  df$Value <- abs(df$Value)\n  df$Value <- df$Value/sum(df$Value)\n  df$p <- cumsum(df$Value)-diff(c(0,cumsum(df$Value)))*(1-0.5)\n  \n  ggplot(data=df, aes(x=factor(1),y=Value, fill=factor(Country), weight=Value))+ \n    geom_bar(width=1,stat=\"identity\",colour=\"black\") + \n    coord_polar(theta=\"y\")  + \n    geom_text(aes(x=1.5,y=p, angle=-p*360,label=Country,vjust=0)) +\n    theme_bw() + \n    theme(axis.title.x = element_blank(), \n          axis.title.y= element_blank(), \n          axis.text.x=element_blank(), \n          axis.text.y=element_blank(), \n          panel.grid.minor = element_blank(), \n          panel.grid.major = element_blank(), \n          panel.border = element_blank(), \n          axis.ticks=element_blank(),\n          legend.position = \"none\") \n  #+ ggtitle(indicator)\n}\nte.table=function(c,countries,indicators,d1=\"2005\",what=\"NULL\"){\n  if(what==\"te.plot.compare.scale\"|| what==\"te.plot.compare\" || what==\"te.geomap\" || what==\"te.tree.map\" || what==\"te.heat.map\"){d1=\"last\"}\n  if(what==\"te.geomap\"){countries=te.countries(c,\"G200\")}\n  if(what==\"te.correlation.matrix\"){d1=\"1950\"}\n  df=te.get.hist.multi.free(c,countries,indicators,d1)\n  if(is.null(df)){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  if(length(df)<2){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  #df$DateTime <- as.character(as.yearmon(df$DateTime))\n  #df$DateTime <- as.character(as.yearmon(df$DateTime))\n  #df\n  as.list(df)\n}\n#te.table(c,\"argentina\",\"youth unemployment rate\")\nte.correlation.matrix=function(c,country,indicator,d1=\"NULL\",opts=NULL){\n  options(stringsAsFactors = FALSE)\n  df=te.get.hist.multi.free(c,country,indicator,d1=\"1950\")\n  #df=te.get.hist.multi.free(c,country,indicator,d1=\"2012\")\n  if(is.null(df)){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  if(length(df)<2){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  df$Country[!is.na(countrycode(df$Country,\"country.name\",\"iso3c\"))] <- countrycode(df$Country,\"country.name\",\"iso3c\")[!is.na(countrycode(df$Country,\"country.name\",\"iso3c\"))]\n  df$Country[tolower(df$Country)==\"euro area\"] <- \"EA17\"  \n  if(length(country)==1){\n    titl=paste(country,\"Indicators\",sep=\" - \")\n    df$Indicator <- sapply(df, function(x) paste(df$Category,sep=\"\"))[,1] \n  }else if(length(indicator)==1){\n    titl=paste(indicator,\"Countries\",sep=\" - \")\n    df$Indicator <- sapply(df, function(x) paste(substr(df$Country,1,4),sep=\"\"))[,1] \n  }else{\n    titl=\"TODO\"\n    df$Indicator <- sapply(df, function(x) paste(substr(df$Country,1,4),df$Category,sep=\" - \"))[,1] \n  }\n  df$DateTime <- as.yearmon(df$DateTime)\n  #df$DateTime <- as.yearqtr(df$DateTime)\n  ndf = cast(df,DateTime ~ Indicator,value = \"Value\",fun.aggregate=\"mean\")\n  names=names(ndf)\n  #ndf=as.data.frame(na.omit(na.trim(na.approx(ndf[,2:length(names(ndf))]))))\n  #names(ndf)=names[2:length(names)]\n  #if(length(na.omit(na.trim(ndf))[,1])<3){stop(\"Too Little Info. One or more Indicators are sparse in data, re-do selection.\")}\n  #plot(na.approx(ndf[,2]))\n  mdata=cor(na.approx(ndf[,2:length(names)],na.rm=F),use = \"pairwise.complete.obs\")\n  #mdata=cor(as.data.frame(ndf[,1:length(names(ndf))]))\n  plotcorrInternal <- function() {\n    if (i == j && !diag) \n      return()\n    if (!numbers) {\n      mat[1, 2] <- mdata[i, j]\n      mat[2, 1] <- mat[1, 2]\n      ell <- ellipse(mat, t = 0.43)\n      ell[, 1] <- ell[, 1] + j \n      ell[, 2] <- ell[, 2] + length(rows) + 1 - i\n      polygon(ell, col = col[i, j])\n      if (outline) \n        lines(ell)\n    }\n    else {\n      text(j + 0.3, length(rows) + 1 - i , \n           round(100 * mdata[i, j], 0), adj=c(.5,.5),cex = .9,col=colorsnum[5*mdata[i,j] + 6])\n    }\n  }\n  colors = c(\"#08519C\",\"#3182BD\",\"#6BAED6\",\"#BDD7E7\",\"#EFF3FF\",\"white\",\"#FEE5D9\",\"#FCAE91\",\"#FB6A4A\",\"#DE2D26\",\"#A50F15\")\n  colorsnum = c(\"#08519C\",\"#3182BD\",\"#6BAED6\",\"#BDD7E7\",\"#CCD2E5\",\"#E4E2B7\",\"#D4BEB4\",\"#FCAE91\",\"#FB6A4A\",\"#DE2D26\",\"#A50F15\")\n  savepar <- par(pty = \"m\", mar=c(0,0,1,0),oma=c(0,0,1,0))\n  on.exit(par(savepar))\n  plot.new()\n  par(new = TRUE)\n  rowdim <- dim(mdata)[1]\n  coldim <- dim(mdata)[2]\n  rowlabs <- dimnames(mdata)[[1]]\n  collabs <- dimnames(mdata)[[2]]\n  if (is.null(rowlabs)) \n    rowlabs <- 1:rowdim\n  if (is.null(collabs)) \n    collabs <- 1:coldim\n  rowlabs <- as.character(rowlabs)\n  collabs <- as.character(collabs)\n  \n  col=colors[5*mdata + 6]\n  col <- rep(col, length = length(mdata))\n  dim(col) <- dim(mdata)\n  cols <- 1:coldim\n  rows <- 1:rowdim\n  maxdim <- max(length(rows), length(cols))\n  plt <- par(\"plt\")\n  xlabwidth <- max(strwidth(rowlabs[rows], units = \"figure\",cex = .1))/(plt[2] - plt[1])\n  xlabwidth <- xlabwidth * maxdim/(1 - xlabwidth)\n  ylabwidth <- max(strwidth(collabs[cols], units = \"figure\",cex = .1))/(plt[4] - plt[3])\n  ylabwidth <- ylabwidth * maxdim/(1 - ylabwidth)\n  \n  plot(c(-xlabwidth - 0.5, maxdim + 0.5), c(0, maxdim + 1.5 + \n       ylabwidth), type = \"n\", bty = \"n\", axes = F, xlab = \"\", \n       ylab = \"\", asp = 1, cex.lab = .5)\n  #title(titl,cex.main = 1)\n  title(\"\")\n  text(rep(0, length(rows)), length(rows):1, labels = rowlabs[rows], \n       adj = 1, cex = .8)\n  text(cols, rep(length(rows) + 1, length(cols)), \n       labels = collabs[cols], srt = 25, adj = 0, cex = .7)\n  \n  mat <- diag(c(1, 1))\n  diag=F\n  numbers=F\n  outline=T\n  for (i in 1:dim(mdata)[1]) {\n    for (j in 1:dim(mdata)[2]) {\n      \n      if ((i >= j)) {\n        numbers=F\n        plotcorrInternal()\n      }\n      else if ((i <= j)) {\n        numbers=T\n        plotcorrInternal()\n      }\n    }\n  }\n}\n#dataFrame=te.get.hist.multi.free(c,country,indicator,date)\n#te.plot.multi(c,c(\"United States:Unemployment Rate\",\"United States:Inflation Rate\"),date=\"2005\")\n#te.plot.compare(c(\"r@tradingeconomics.com\",\"Lisboa!1\"),countries,indicators)\n#c=set.auth(\"r@tradingeconomics.com\",\"Lisboa!1\")\n#te.plot.compare(c,EUROPE[20:length(EUROPE)],indicators)\n#te.plot.compare.scale(c,EUROPE[1:20],\"unemployment rate\")\n#dataFrame=te.get.hist.multi.free(c,EUROPE,\"unemployment rate\",d1=\"last\")\n#te.plot.multi(c,reqArray)\n#te.plot(c,\"united states\",\"unemployment rate\")\n#te.countries(c,\"G20\")\n#te.geomap(c,\"inflation rate\")\n\n#EUROPE=\n#AFRICA=\n#G20=\n#AMERICAS=\n#ASIA= \n\nindicators=c(\"gdp annual growth rate\",\"inflation rate\")\ncountries=c(\"portugal\",\"greece\",\"spain\",\"united states\",\"united kingdom\",\"japan\")\n\npanel.cor=function(x, y, digits=2, prefix=\"\", cex.cor){\n  usr <- par(\"usr\"); on.exit(par(usr)) \n  par(usr = c(0, 1, 0, 1)) \n  r <- cor(x, y,use=\"pairwise.complete.obs\")   \n  test <- cor.test(x,y,use=\"pairwise.complete.obs\") \n  # borrowed from printCoefmat\n  Signif <- symnum(test$p.value, corr = FALSE, na = FALSE, \n                   cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),\n                   symbols = c(\"****\", \"***\", \"**\", \"*\", \" \")) \n  text(0.5, 0.5, round(100*r),cex=3) \n  text(.8, .85, Signif,col=2) \n}\nte.simplecorrelation.matrix=function(c,country,indicator,d1=\"NULL\",opts=NULL){\n  options(stringsAsFactors = FALSE)\n  df=te.get.hist.multi.free(c,country,indicator,d1=\"1950\")\n  #df=te.get.hist.multi.free(c,country,indicator,d1=\"2012\")\n  if(is.null(df)){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  if(length(df)<2){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  \n  df$Country[!is.na(countrycode(df$Country,\"country.name\",\"iso3c\"))] <- countrycode(df$Country,\"country.name\",\"iso3c\")[!is.na(countrycode(df$Country,\"country.name\",\"iso3c\"))]\n  df$Country[tolower(df$Country)==\"euro area\"] <- \"EA17\"  \n  if(length(country)==1){\n  titl=paste(country,\"Indicators\",sep=\" - \")\n  df$Indicator <- sapply(df, function(x) paste(df$Category,sep=\"\"))[,1] \n}else if(length(indicator)==1){\n  titl=paste(indicator)\n  df$Indicator <- sapply(df, function(x) paste(substr(df$Country,1,4),sep=\"\"))[,1] \n}else{\n  titl=\"TODO\"\n  df$Indicator <- sapply(df, function(x) paste(substr(df$Country,1,4),df$Category,sep=\" - \"))[,1] \n}\n  df$DateTime <- as.yearmon(df$DateTime)\n  #df$DateTime <- as.yearqtr(df$DateTime)\n  ndf = cast(df,DateTime ~ Indicator,value = \"Value\",fun.aggregate=\"mean\")\n  names=names(ndf)\n  if(length(na.omit(na.trim(ndf))[,1])<3){stop(\"Too Little Info. One or more Indicators are sparse in data, re-do selection.\")}\n  ndf=as.data.frame(na.omit(na.approx(na.trim(ndf[,2:length(names(ndf))]))))\n  names(ndf)=names[2:length(names)]\n  pairs(as.data.frame(ndf[,1:length(names(ndf))]),\n        lower.panel=panel.smooth, upper.panel=panel.cor,gap=0.1,\n        cex=.1,cex.labels=1.2,main=\"\")\n}\n\nif(F){\n  #BUBBLE PLOT\n  df=data.frame()\n  assign(\"df\",historicalToMatrix(c,country,indicator), envir = environment())\n  if(is.null(df)){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  if(length(df)<2){stop(\"Return to Sender: No Such Country - Indicator Pair.\")}\n  df$Country[!is.na(countrycode(df$Country,\"country.name\",\"iso3c\"))] <- countrycode(df$Country,\"country.name\",\"iso3c\")[!is.na(countrycode(df$Country,\"country.name\",\"iso3c\"))]\n  df$Country[tolower(df$Country)==\"euro area\"] <- \"RA17\"\n  titl=paste(indicator[2], indicator[3],sep=\" ~ \")\n  ggplot(df, aes(x=get(names(df)[2]), y=get(names(df)[3]), size=get(names(df)[1]), label=Country),legend=FALSE)+\n  geom_point(colour=\"white\", fill=\"red\", shape=21) + scale_size_area(max_size = 25)+ \n  scale_x_continuous(indicator[2],limits=c(min(df[,2]), max(df[,2])))+\n  scale_y_continuous(indicator[3],limits=c(min(df[,3]), max(df[,3])))+\n  geom_text(size=4, hjust=0, vjust=0)+\n  ggtitle(titl)\n}",
    "created" : 1386063563788.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "66|52|75|0|\n77|49|83|0|\n85|64|96|0|\n97|67|109|0|\n110|58|137|0|\n139|69|217|0|\n264|39|332|0|\n333|43|348|0|\n349|54|368|0|\n369|63|388|0|\n517|64|528|0|\n654|55|665|0|\n697|6|712|0|\n",
    "hash" : "1717358606",
    "id" : "46F557F4",
    "lastKnownWriteTime" : 1392998090,
    "path" : "~/TE/R/TE.R",
    "project_path" : "R/TE.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}